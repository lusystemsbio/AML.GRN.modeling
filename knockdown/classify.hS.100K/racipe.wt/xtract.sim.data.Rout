
R version 4.0.2 (2020-06-22) -- "Taking Off Again"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #!/usr/bin/env Rscript
> 
> remove(list = ls()) 
> 
> library(sRACIPE)
Loading required package: SummarizedExperiment
Loading required package: GenomicRanges
Loading required package: stats4
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,
    clusterExport, clusterMap, parApply, parCapply, parLapply,
    parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, basename, cbind, colnames,
    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,
    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,
    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,
    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,
    union, unique, unsplit, which, which.max, which.min

Loading required package: S4Vectors

Attaching package: ‘S4Vectors’

The following object is masked from ‘package:base’:

    expand.grid

Loading required package: IRanges
Loading required package: GenomeInfoDb
Loading required package: Biobase
Welcome to Bioconductor

    Vignettes contain introductory material; view with
    'browseVignettes()'. To cite Bioconductor, see
    'citation("Biobase")', and for packages 'citation("pkgname")'.

Loading required package: DelayedArray
Loading required package: matrixStats

Attaching package: ‘matrixStats’

The following objects are masked from ‘package:Biobase’:

    anyMissing, rowMedians


Attaching package: ‘DelayedArray’

The following objects are masked from ‘package:matrixStats’:

    colMaxs, colMins, colRanges, rowMaxs, rowMins, rowRanges

The following objects are masked from ‘package:base’:

    aperm, apply, rowsum

Loading required package: Rcpp
> library(NetAct)
> # source('../heatmapSimilarity.updated.R')
> # source('../functions.R')
> library(gplots)

Attaching package: ‘gplots’

The following object is masked from ‘package:IRanges’:

    space

The following object is masked from ‘package:S4Vectors’:

    space

The following object is masked from ‘package:stats’:

    lowess

> 
> # Constants 
> #----------
> circuit_idx <- '0.09-32-0.85'
> NO_MODELS <- 100000
> 
> # input directory for hS objects obtained from cal.metrics.sim_circuits.R
> hS.dir <- './data.sim/' 
> 
> outdir <- './data/'
> dir.create(outdir)
Warning message:
In dir.create(outdir) : './data' already exists
> 
> # Explore one selected circuit
> #-----------------------------
> racipe <- readRDS(file = paste('./data.sim/circuit_simulated_', circuit_idx, '.rds', sep = '') )
> names(racipe)
 [1] "ATM"     "DNMT1"   "DNMT3A"  "E2F1"    "E2F2"    "E2F4"    "E2F5"   
 [8] "ETS2"    "GATA1"   "IRF3"    "MYBL2"   "MYC"     "MYCN"    "NFIC"   
[15] "PAX5"    "POU2F1"  "RARA"    "RB1"     "STAT3"   "TFDP1"   "TP53"   
[22] "TP63"    "USF2"    "MCM3"    "MCM5"    "SMARCA4" "IRF7"    "EBF1"   
[29] "CTBP1"  
> length(names(racipe))
[1] 29
> 
> 
> # Plot circuit
> #-------------
> #sRACIPE::sracipePlotCircuit(racipe, plotToFile = F) 
> #sRACIPE:: sracipePlotCircuit(racipe, plotToFile = T) 
> 
> class(racipe)
[1] "RacipeSE"
attr(,"package")
[1] "sRACIPE"
> names(racipe)
 [1] "ATM"     "DNMT1"   "DNMT3A"  "E2F1"    "E2F2"    "E2F4"    "E2F5"   
 [8] "ETS2"    "GATA1"   "IRF3"    "MYBL2"   "MYC"     "MYCN"    "NFIC"   
[15] "PAX5"    "POU2F1"  "RARA"    "RB1"     "STAT3"   "TFDP1"   "TP53"   
[22] "TP63"    "USF2"    "MCM3"    "MCM5"    "SMARCA4" "IRF7"    "EBF1"   
[29] "CTBP1"  
> assays(racipe)
List of length 1
names(1): deterministic
> 
> circuit_tpo <- sracipeCircuit(racipe)
> length(unique(sort(c(circuit_tpo$Source, circuit_tpo$Target)) ))
[1] 29
> 
> # Save the circuit
> #----------------- 
> outdir <- './data/'
> fname.out <- paste(outdir, 'circuit-', circuit_idx, '.tpo' ,sep = '')
> write.table(circuit_tpo, file = fname.out, sep = '\t', quote = F, row.names = F)
> 
> # extract TFs in the network 
> #---------------------------
> TFs_in_circuit <- union(circuit_tpo$Source, circuit_tpo$Target)
> length(TFs_in_circuit)
[1] 29
> 
> fname.out <- paste(outdir, 'TFs-', circuit_idx, '.txt' ,sep = '')
> write.table(TFs_in_circuit, file = fname.out, sep = '\t', quote = F, row.names = F)
> 
> 
> # Load heatmap similarity object
> #-------------------------------
> fname.hS <- paste(hS.dir, 'hS_', circuit_idx, '.rds', sep = '')
> fname.hS
[1] "./data.sim/hS_0.09-32-0.85.rds"
> hS <- readRDS(file = fname.hS)
> hS$AvgDist
[1] 0.008802527
> hS$simulated.cluster.freq # 0.07537 0.24129 0.68334 
simulated.cluster.adjusted
      0       1       2 
0.07711 0.24102 0.68187 
> hS$simulated.cluster.freq[2] + hS$simulated.cluster.freq[3]
      1 
0.92289 
> hS$KL
[1] 0.1667236
> 
> hS$simulated.cluster.freq
simulated.cluster.adjusted
      0       1       2 
0.07711 0.24102 0.68187 
> hS$simulated.cluster.freq * NO_MODELS
simulated.cluster.adjusted
    0     1     2 
 7711 24102 68187 
> sum(hS$simulated.cluster.freq * NO_MODELS)
[1] 1e+05
> # Save simulation data with cluster information
> dim(hS$dataSimulation)
[1]     29 100000
> data.sim <- t(hS$dataSimulation)
> dim(data.sim) 
[1] 100000     29
> cluster.labels <- c(rep('1', hS$simulated.cluster.freq[2]*NO_MODELS),  
+                     rep('2', hS$simulated.cluster.freq[3]*NO_MODELS), 
+                     rep('3', (as.numeric(hS$simulated.cluster.freq[1]*NO_MODELS)))) 
> 
> length(cluster.labels) 
[1] 100000
> sum(cluster.labels=='3') # 7537 #642 - Hybrid
[1] 7711
> sum(cluster.labels=='1') # 24129 #2443 - AML
[1] 24102
> sum(cluster.labels=='2') # 68334 #6915 - Untreated
[1] 68187
> 
> data.sim.labeled <- cbind(cluster.labels, data.sim) 
> colnames(data.sim.labeled) <- c('CLUSTER_NO', colnames(data.sim))
> fname.out <- paste(outdir, 'racipe.models.wt.labeled.csv', sep = '')
> write.csv(data.sim.labeled, fname.out, row.names = FALSE, quote = F)
> 
> 
> proc.time()
   user  system elapsed 
 16.781   0.884  17.731 
