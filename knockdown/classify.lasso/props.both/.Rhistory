remove(list = ls())
library(sRACIPE)
NO_CLUSTERS.REF <- 2 # 3
outdir  <- './data/'
dir.create(outdir )
outdir.kd.clustered <- './data.sim.clustered/'
dir.create(outdir.kd.clustered)
source('./functions.classify_models.R')
NO_META_COLS = 1
remove(list = ls())
library(sRACIPE)
NO_CLUSTERS.REF <- 2 # 3
outdir  <- './data/'
dir.create(outdir )
outdir.kd.clustered <- './data.sim.clustered/'
dir.create(outdir.kd.clustered)
source('./functions.classify_models.R')
NO_META_COLS = 1
fname_data <- '../racipe.wt/data/racipe.models.wt.labeled.csv'
mydata = read.csv(file=fname_data, header=TRUE)
dim(mydata)
mydata.saved <- mydata
mydata <- mydata[mydata$CLUSTER_NO!=3, ]
dim(mydata)
ndata <- mydata[, (NO_META_COLS+1):ncol(mydata)]
pca <- prcomp(ndata)
prData <- scale(ndata, pca$center, pca$scale) %*%  pca$rotation
prData.labeled <- as.data.frame(cbind(mydata$CLUSTER_NO, prData))
colnames(prData.labeled) <- c(colnames(mydata)[1], colnames(prData))
data_training <- as.data.frame(prData)
data_training$out <- as.factor(mydata$CLUSTER_NO)
data_training$out <- relevel(data_training$out, ref='1')
library(nnet)
mymodel <- multinom(out ~ PC1+PC2+PC3+PC4+PC5+PC6+PC7+PC8+PC9+PC10,
data = data_training)
fname_data <- '../racipe.wt/data/mean_sd.racipe.models.wt.csv'
mean_sd.wt.df = read.csv(file=fname_data, header=TRUE)
means.wt <- mean_sd.wt.df$mean
names(means.wt) <- mean_sd.wt.df$tf
sds.wt <- mean_sd.wt.df$sd
names(sds.wt) <- mean_sd.wt.df$tf
data.dir.sim <- '../../data.sim/skd/'
fnames <- sort(list.files(data.dir.sim))
fnames
length(fnames)
fname <- fnames
xtract_gene_name <- function(fname){
fname.suffix <- strsplit(fname, split = '-', fixed = TRUE)[[1]][2]
gene_name <- strsplit(fname.suffix, split = '.', fixed = TRUE)[[1]][1]
return(gene_name)
}
gene_names <- sapply(fnames, function(fname) xtract_gene_name(fname))
gene_names
length(gene_names)
cluster_props <- as.data.frame(matrix(nrow = (length(fnames)+1), ncol = NO_CLUSTERS.REF))
rownames(cluster_props) <- c('Untreated', gene_names)
colnames(cluster_props) <- c('Cluster_1', 'Cluster_2')
fname <- fnames[1]
print(fname)
gene_name <- xtract_gene_name(fname)
racipe <- readRDS(file = paste(data.dir.sim, fname, sep = ''))
geneExpression.kd <- assay(racipe,1)
geneExpression.kd <- log2(1+geneExpression.kd)
ndata.kd <- t(normalize_by_wt_mean_and_sd(geneExpression=geneExpression.kd,
means = means.wt, sds=sds.wt))
prData.kd <- scale(ndata.kd, pca$center, pca$scale) %*%  pca$rotation
predicted_cluster_IDs <- as.numeric(predict(mymodel, prData.kd)) #predicted_ranks
head(predicted_cluster_IDs)
sum(predicted_cluster_IDs==1)
sum(predicted_cluster_IDs==2)
?predict
cluster.probs <- predict(mymodel, prData.kd, type = 'probs')
class(cluster.probs)
head(cluster.probs)
head(predicted_cluster_IDs)
predicted_cluster_IDs <- predict(mymodel, prData.kd)
head(predicted_cluster_IDs)
head(cluster.probs)
head(predicted_cluster_IDs)
head(cluster.probs)
sum(cluster.probs==0)
sum(predicted_cluster_IDs==1)
sum(cluster.probs==1)
sum(predicted_cluster_IDs==2)
unique(cluster.probs)
cat(9.999925e-01)
cat(7.582112e-07)
sum(cluster.probs==0)
sum(cluster.probs==1)
remove(list = ls())
library(sRACIPE)
NO_CLUSTERS.REF <- 2 # 3
outdir  <- './data/'
dir.create(outdir )
outdir.kd.clustered <- './data.sim.clustered/'
dir.create(outdir.kd.clustered)
source('./functions.classify_models.R')
NO_META_COLS = 1
fname_data <- '../racipe.wt/data/racipe.models.wt.labeled.csv'
mydata = read.csv(file=fname_data, header=TRUE)
dim(mydata)
mydata.saved <- mydata
mydata <- mydata[mydata$CLUSTER_NO!=3, ]
dim(mydata)
ndata <- mydata[, (NO_META_COLS+1):ncol(mydata)]
pca <- prcomp(ndata)
prData <- scale(ndata, pca$center, pca$scale) %*%  pca$rotation
prData.labeled <- as.data.frame(cbind(mydata$CLUSTER_NO, prData))
colnames(prData.labeled) <- c(colnames(mydata)[1], colnames(prData))
data_training <- as.data.frame(prData)
data_training$out <- as.factor(mydata$CLUSTER_NO)
data_training$out <- relevel(data_training$out, ref='1')
library(nnet)
mymodel <- multinom(out ~ PC1+PC2+PC3+PC4+PC5+PC6+PC7+PC8+PC9+PC10,
data = data_training)
fname.out <- paste(outdir, 'nnet_model.rds', sep = '')
saveRDS(mymodel, file = fname.out)
fname_data <- '../racipe.wt/data/mean_sd.racipe.models.wt.csv'
mean_sd.wt.df = read.csv(file=fname_data, header=TRUE)
means.wt <- mean_sd.wt.df$mean
names(means.wt) <- mean_sd.wt.df$tf
sds.wt <- mean_sd.wt.df$sd
names(sds.wt) <- mean_sd.wt.df$tf
data.dir.sim <- '../../data.sim/skd/'
fnames <- sort(list.files(data.dir.sim))
fnames
length(fnames)
fname <- fnames
xtract_gene_name <- function(fname){
fname.suffix <- strsplit(fname, split = '-', fixed = TRUE)[[1]][2]
gene_name <- strsplit(fname.suffix, split = '.', fixed = TRUE)[[1]][1]
return(gene_name)
}
gene_names <- sapply(fnames, function(fname) xtract_gene_name(fname))
gene_names
length(gene_names)
head(fname)
head(fnames)
head(gene_names)
length(gene_names)
gene_names
length(fnames)
class(fnames)
head(fnames)
fnames.skd <- sort(list.files(data.dir.sim))
gene_names.skd <- sapply(fnames.skd, function(fname) xtract_gene_name(fname))
sum(fnames==fnames.skd)
sum(gene_names==gene_names.skd)
data.dir.sim <- '../../data.sim/dkd/'
fnames.dkd <- sort(list.files(data.dir.sim))
fnames.dkd <- sort(list.files(data.dir.sim))
gene_names.dkd <- sapply(fnames.dkd, function(fname) xtract_gene_name(fname))
length(gene_names.dkd)
head(gene_names.dkd)
head(gene_names.skd)
head(fnames.dkd)
data.dir.sim <- '../../data.sim/'
fnames.skd <- sort(list.files(data.dir.sim))
head(sort(fnames.skd))
tail(sort(fnames.skd))
?list.files
fnames.skd <- sort(list.files(data.dir.sim, '*.rds'))
fnames <- sort(list.files(data.dir.sim, '*.rds'))
fnames <- sort(list.files(data.dir.sim, '*.rds'))
gene_names <- sapply(fnames, function(fname) xtract_gene_name(fname))
head(sort(fnames))
tail(sort(fnames))
data.dir.sim <- '../../data.sim/'
fnames <- sort(list.files(data.dir.sim, '*.rds'))
gene_names <- sapply(fnames, function(fname) xtract_gene_name(fname))
cluster_props <- as.data.frame(matrix(nrow = (length(fnames)+1), ncol = NO_CLUSTERS.REF))
rownames(cluster_props) <- c('Untreated', gene_names)
colnames(cluster_props) <- c('Cluster_1', 'Cluster_2')
fname <- fnames[1]
for(fname in fnames){
print(fname)
gene_name <- xtract_gene_name(fname)
racipe <- readRDS(file = paste(data.dir.sim, fname, sep = ''))
geneExpression.kd <- assay(racipe,1)
geneExpression.kd <- log2(1+geneExpression.kd)
ndata.kd <- t(normalize_by_wt_mean_and_sd(geneExpression=geneExpression.kd,
means = means.wt, sds=sds.wt))
prData.kd <- scale(ndata.kd, pca$center, pca$scale) %*%  pca$rotation
predicted_cluster_IDs <- as.numeric(predict(mymodel, prData.kd)) #predicted_ranks
# obtain cluster proportions:
cluster_props[gene_name,] <- c(sum(predicted_cluster_IDs==1),
sum(predicted_cluster_IDs==2))
# save ndata.kd with cluster id attached
ndata.kd.clustered <- cbind(predicted_cluster_IDs, ndata.kd)
colnames(ndata.kd.clustered) <- c('CLUSTER_NO', colnames(ndata.kd))
fname.ndata <- paste(outdir.kd.clustered, 'racipe-', gene_name, '.csv', sep = '')
write.csv(ndata.kd.clustered, fname.ndata, quote = F, row.names = F)
# break()
}
mydata <- mydata.saved
ndata <- mydata[, (NO_META_COLS+1):ncol(mydata)]
pca <- prcomp(ndata)
prData <- scale(ndata, pca$center, pca$scale) %*%  pca$rotation
predicted_cluster_IDs <- as.numeric( predict(mymodel, prData)) # WT models
cluster_props["Untreated",] <- c(sum(predicted_cluster_IDs==1),
sum(predicted_cluster_IDs==2))
fname.out <- paste(outdir , 'cluster_props.csv', sep = '')
write.csv(cluster_props, file = fname.out, quote = F)
View(cluster_props)
remove(list = ls())
library(sRACIPE)
NO_CLUSTERS.REF <- 2 # 3
outdir  <- './data/'
dir.create(outdir )
outdir.kd.clustered <- './data.sim.clustered/'
dir.create(outdir.kd.clustered)
source('./functions.classify_models.R')
NO_META_COLS = 1
fname_data <- '../racipe.wt/data/racipe.models.wt.labeled.csv'
mydata = read.csv(file=fname_data, header=TRUE)
dim(mydata)
mydata.saved <- mydata
mydata$CLUSTER_NO <- as.numeric(mydata$CLUSTER_NO==1)
mydata$CLUSTER_NO <- factor(mydata$CLUSTER_NO)
unique(mydata$CLUSTER_NO)
fname_data <- '../racipe.wt/data/mean_sd.racipe.models.wt.csv'
mean_sd.wt.df = read.csv(file=fname_data, header=TRUE)
means.wt <- mean_sd.wt.df$mean
names(means.wt) <- mean_sd.wt.df$tf
sds.wt <- mean_sd.wt.df$sd
names(sds.wt) <- mean_sd.wt.df$tf
xtract_gene_name <- function(fname){
fname.suffix <- strsplit(fname, split = '-', fixed = TRUE)[[1]][2]
gene_name <- strsplit(fname.suffix, split = '.', fixed = TRUE)[[1]][1]
return(gene_name)
}
data.dir.sim <- '../../data.sim/'
fnames <- sort(list.files(data.dir.sim, '*.rds'))
gene_names <- sapply(fnames, function(fname) xtract_gene_name(fname))
cluster_props <- as.data.frame(matrix(nrow = (length(fnames)+1), ncol = NO_CLUSTERS.REF))
rownames(cluster_props) <- c('Untreated', gene_names)
colnames(cluster_props) <- c('Cluster_1', 'Cluster_2')
fname <- fnames[1]
set.seed(1)
mydata <- mydata[sample(nrow(mydata)), ]
x <- model.matrix(CLUSTER_NO ~., mydata)[,-1]
y <- ifelse(mydata$CLUSTER_NO == 1, 1, 0)
head(y)
library(glmnet)
cv.lasso <- cv.glmnet(x, y, alpha = 0.8, family = "binomial")
model <- glmnet(x, y, alpha = 1, family = "binomial",
lambda = cv.lasso$lambda.1se #cv.lasso$lambda.min
)
library(tidyverse)
library(glmnet)
set.seed(1)
mydata <- mydata[sample(nrow(mydata)), ]
x <- model.matrix(CLUSTER_NO ~., mydata)[,-1]
y <- ifelse(mydata$CLUSTER_NO == 1, 1, 0)
head(y)
cv.lasso <- cv.glmnet(x, y, alpha = 0.8, family = "binomial")
model <- glmnet(x, y, alpha = 1, family = "binomial",
lambda = cv.lasso$lambda.1se #cv.lasso$lambda.min
)
print(fname)
gene_name <- xtract_gene_name(fname)
racipe <- readRDS(file = paste(data.dir.sim, fname, sep = ''))
geneExpression.kd <- assay(racipe,1)
geneExpression.kd <- log2(1+geneExpression.kd)
ndata.kd <- t(normalize_by_wt_mean_and_sd(geneExpression=geneExpression.kd,
means = means.wt, sds=sds.wt))
predicted.classes <- ifelse(probabilities > 0.5, 1, 2)
probabilities <- model %>% predict(newx = ndata.kd)
predicted.classes <- ifelse(probabilities > 0.5, 1, 2)
cluster_props[gene_name,] <- c(sum(predicted.classes==1),
sum(predicted.classes==2))
ndata.kd.clustered <- cbind(predicted_cluster_IDs, ndata.kd)
ndata.kd.clustered <- cbind(predicted.classes, ndata.kd)
colnames(ndata.kd.clustered) <- c('CLUSTER_NO', colnames(ndata.kd))
fname.ndata <- paste(outdir.kd.clustered, 'racipe-', gene_name, '.csv', sep = '')
write.csv(ndata.kd.clustered, fname.ndata, quote = F, row.names = F)
}
ndata.kd.clustered <- cbind(predicted.classes, ndata.kd)
colnames(ndata.kd.clustered) <- c('CLUSTER_NO', colnames(ndata.kd))
fname.ndata <- paste(outdir.kd.clustered, 'racipe-', gene_name, '.csv', sep = '')
write.csv(ndata.kd.clustered, fname.ndata, quote = F, row.names = F)
probabilities <- model %>% predict(newx = as.matrix(mydata.saved[, 2:ncol(mydata.saved)]))
predicted.classes <- ifelse(probabilities > 0.5, 1, 2) # WT models
cluster_props["Untreated",] <- c(sum(predicted.classes==1),
sum(predicted.classes==2))
remove(list = ls())
library(sRACIPE)
library(tidyverse)
library(glmnet)
NO_CLUSTERS.REF <- 2 # 3
outdir  <- './data/'
dir.create(outdir )
outdir.kd.clustered <- './data.sim.clustered/'
dir.create(outdir.kd.clustered)
source('./functions.classify_models.R')
# Load training data
#-------------------
NO_META_COLS = 1
fname_data <- '../racipe.wt/data/racipe.models.wt.labeled.csv'
mydata = read.csv(file=fname_data, header=TRUE)
dim(mydata)
mydata.saved <- mydata
mydata$CLUSTER_NO <- as.numeric(mydata$CLUSTER_NO==1)
mydata$CLUSTER_NO <- factor(mydata$CLUSTER_NO)
unique(mydata$CLUSTER_NO)
# randomize data
set.seed(1)
mydata <- mydata[sample(nrow(mydata)), ]
x <- model.matrix(CLUSTER_NO ~., mydata)[,-1]
y <- ifelse(mydata$CLUSTER_NO == 1, 1, 0)
head(y)
cv.lasso <- cv.glmnet(x, y, alpha = 0.8, family = "binomial")
model <- glmnet(x, y, alpha = 1, family = "binomial",
lambda = cv.lasso$lambda.1se #cv.lasso$lambda.min
)
#
# # remove data in CL3 (NULL models)
# mydata <- mydata[mydata$CLUSTER_NO!=3, ]
# dim(mydata)
# ndata <- mydata[, (NO_META_COLS+1):ncol(mydata)]
# pca <- prcomp(ndata)
# prData <- scale(ndata, pca$center, pca$scale) %*%  pca$rotation
#
# prData.labeled <- as.data.frame(cbind(mydata$CLUSTER_NO, prData))
# colnames(prData.labeled) <- c(colnames(mydata)[1], colnames(prData))
#
# data_training <- as.data.frame(prData)
# data_training$out <- as.factor(mydata$CLUSTER_NO)
# data_training$out <- relevel(data_training$out, ref='1')
#
# # Train nnet model
# #-----------------
# library(nnet)
# mymodel <- multinom(out ~ PC1+PC2+PC3+PC4+PC5+PC6+PC7+PC8+PC9+PC10,
#                     data = data_training)
#
# fname.out <- paste(outdir, 'nnet_model.rds', sep = '')
# saveRDS(mymodel, file = fname.out)
# Load mean and sd of models (with no knockdown)
#-----------------------------------------------
fname_data <- '../racipe.wt/data/mean_sd.racipe.models.wt.csv'
mean_sd.wt.df = read.csv(file=fname_data, header=TRUE)
means.wt <- mean_sd.wt.df$mean
names(means.wt) <- mean_sd.wt.df$tf
sds.wt <- mean_sd.wt.df$sd
names(sds.wt) <- mean_sd.wt.df$tf
# sum(mean_sd.wt.df$tf==rn)
# Load kd simulations
#---------------------------
xtract_gene_name <- function(fname){
fname.suffix <- strsplit(fname, split = '-', fixed = TRUE)[[1]][2]
gene_name <- strsplit(fname.suffix, split = '.', fixed = TRUE)[[1]][1]
return(gene_name)
}
data.dir.sim <- '../../data.sim/'
fnames <- sort(list.files(data.dir.sim, '*.rds'))
gene_names <- sapply(fnames, function(fname) xtract_gene_name(fname))
#=============
#cluster_props <- as.data.frame(matrix(nrow = (length(fnames)+1), ncol = (NO_CLUSTERS.REF+1)))
cluster_props <- as.data.frame(matrix(nrow = (length(fnames)+1), ncol = NO_CLUSTERS.REF))
rownames(cluster_props) <- c('Untreated', gene_names)
colnames(cluster_props) <- c('Cluster_1', 'Cluster_2')
fname <- fnames[1]
for(fname in fnames){
print(fname)
gene_name <- xtract_gene_name(fname)
racipe <- readRDS(file = paste(data.dir.sim, fname, sep = ''))
geneExpression.kd <- assay(racipe,1)
geneExpression.kd <- log2(1+geneExpression.kd)
ndata.kd <- t(normalize_by_wt_mean_and_sd(geneExpression=geneExpression.kd,
means = means.wt, sds=sds.wt))
# prData.kd <- scale(ndata.kd, pca$center, pca$scale) %*%  pca$rotation
#
# predicted_cluster_IDs <- as.numeric(predict(mymodel, prData.kd)) #predicted_ranks
#
# # obtain cluster proportions:
# cluster_props[gene_name,] <- c(sum(predicted_cluster_IDs==1),
#                                sum(predicted_cluster_IDs==2))
probabilities <- model %>% predict(newx = ndata.kd)
predicted.classes <- ifelse(probabilities > 0.5, 1, 2)
# obtain cluster proportions:
cluster_props[gene_name,] <- c(sum(predicted.classes==1),
sum(predicted.classes==2))
# save ndata.kd with cluster id attached
ndata.kd.clustered <- cbind(predicted.classes, ndata.kd)
colnames(ndata.kd.clustered) <- c('CLUSTER_NO', colnames(ndata.kd))
fname.ndata <- paste(outdir.kd.clustered, 'racipe-', gene_name, '.csv', sep = '')
write.csv(ndata.kd.clustered, fname.ndata, quote = F, row.names = F)
# break()
}
# Calculate cluster proportions for WT models using nnet preditor
#-----------------------------------------------------------------
probabilities <- model %>% predict(newx = as.matrix(mydata.saved[, 2:ncol(mydata.saved)]))
predicted.classes <- ifelse(probabilities > 0.5, 1, 2) # WT models
cluster_props["Untreated",] <- c(sum(predicted.classes==1),
sum(predicted.classes==2))
fname.out <- paste(outdir , 'cluster_props.csv', sep = '')
write.csv(cluster_props, file = fname.out, quote = F)
