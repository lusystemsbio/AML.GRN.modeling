
R version 4.0.2 (2020-06-22) -- "Taking Off Again"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #!/usr/bin/env Rscript
> rm(list=ls()) 
> setwd(getwd())
> 
> # Constants
> #-----------
> # number of TFs to be selected from each method:
> #NO_TOP_TFS_FROM_EACH_METHOD.set <- seq(5, 50, 5)  
> # set_1 <- seq(3, 15, 3)
> # set_2 <- seq(15, 25, 2)
> # set_2 <- set_2[2:length(set_2)]
> #NO_TOP_TFS_FROM_EACH_METHOD.set <- seq(4, 32, 4) 
> NO_TOP_TFS_FROM_EACH_METHOD.set <- seq(4, 48, 4)
> 
> # Output directories
> #-------------------
> outdir <- './data/'
> dir.create(outdir)
> 
> # Import functions 
> #-----------------
> source('./functions.tfBalance.R')
> 
> # Load TFs (ordered) from each method
> #--------------------------
> fname.tfs.comb <- '../../data.tfs/TFs.combined.rds' 
> TFs.combined <- readRDS(file = fname.tfs.comb)
> # names(TFs.combined)
> # tmp.Netact <- TFs.combined$Netact
> # tmp.MARINa <- TFs.combined$MARINa
> # tmp.RI <- TFs.combined$RI
> 
> # Load TF-target DB set
> #---------------------------------------------------------------------------------------------- 
> targetDB.list <- readRDS('../../databases/targetDB.list.rds') 
> 
> # Select TFs from each method and calculate the number of UP TFs in CTRL and TRTMT
> #---------------------------------------------------------------------------------
> coreTFs.list <- list()
> for(fr in names(targetDB.list)){  
+    targetDB.cur <- targetDB.list[[fr]] 
+    for(top.TFs.count in NO_TOP_TFS_FROM_EACH_METHOD.set){ 
+       # TFs from each method
+       #tfs.cur <- as.character(TFs.combined[["Netact"]][,1])
+       #tfsSele <- selectTOPtfs(TFs.combined=TFs.combined, targetDB=targetDB.cur, top.TFs.count=top.TFs.count)
+       tfsSele <- selectTOPtfs.byMethod(TFs.combined=TFs.combined, 
+                                        targetDB=targetDB.cur, 
+                                        top.TFs.count=top.TFs.count) 
+       coreTFs.list[[as.character(fr)]][[as.character(top.TFs.count)]] <- tfsSele  
+       #break()
+    }
+    #break()
+ }
> 
> names(coreTFs.list)
 [1] "0.05" "0.06" "0.07" "0.08" "0.09" "0.1"  "0.12" "0.14" "0.16" "0.18"
[11] "0.2" 
> length(names(coreTFs.list))
[1] 11
> 
> outdir <- './data/'
> dir.create(outdir)
Warning message:
In dir.create(outdir) : './data' already exists
> saveRDS(coreTFs.list, paste(outdir, 'coreTFs.rds', sep = ''))
> 
> proc.time()
   user  system elapsed 
 32.358   0.562  32.926 
