cols.CL2
gplots::heatmap.2(hS$dataSimulation,
Colv = FALSE,
Rowv = TRUE,
trace = 'none')
cols.CL0
cols.CL1
gplots::heatmap.2(hS$dataSimulation,
Colv = FALSE,
Rowv = TRUE,
trace = 'none',
breaks = c(cols.CL0, (cols.CL0+cols.CL1), (cols.CL0+cols.CL1+cols.CL2))
)
gplots::heatmap.2(hS$dataSimulation,
Colv = FALSE,
Rowv = TRUE,
trace = 'none',
breaks = c(cols.CL0, (cols.CL0+cols.CL1), (cols.CL0+cols.CL1+cols.CL2)),
col = c('red', 'green', 'blue')
)
gplots::heatmap.2(hS$dataSimulation,
Colv = FALSE,
Rowv = TRUE,
trace = 'none',
#breaks = c(cols.CL0, (cols.CL0+cols.CL1), (cols.CL0+cols.CL1+cols.CL2)),
#col = c('red', 'green', 'blue')
colsep = c(cols.CL0, (cols.CL0+cols.CL1))
)
names(hS)
gplots::heatmap.2(hS$dataSimulation, trace = "none",
dendrogram = "none", Colv=FALSE,
#col = plotColor,
#ColSideColors = simClusters,
main = "Simulated Data",
distfun=function(x) as.dist(1-cor(t(x), method = "s")))
gplots::heatmap.2(hS$dataSimulation, trace = "none",
dendrogram = "none", Colv=FALSE,
#col = plotColor,
#ColSideColors = simClusters,
main = "Simulated Data",
distfun=function(x) as.dist(1-cor(t(x), method = "s")))
dev.list()
dev.off()
dev.off()
gplots::heatmap.2(hS$dataSimulation, trace = "none",
dendrogram = "none", Colv=FALSE,
#col = plotColor,
#ColSideColors = simClusters,
main = "Simulated Data",
distfun=function(x) as.dist(1-cor(t(x), method = "s")))
graphics::image(hS$dataSimulation)
dim(hS$dataSimulation)
hS$simulated.cluster.freq
cols.CL0
cols.CL1
cols.CL2
?image
BiocGenerics::image(hS$dataSimulation)
?image
dim(hS$dataSimulation)
cols.CL0
cols.CL1
cols.CL2
graphics::image(hS$dataSimulation, col=c('red', 'green', 'blue'),
breaks=c(8, 776, 20000))
graphics::image(hS$dataSimulation, col=c('red', 'green', 'blue'),
breaks=c(0, 8, 776, 20000))
graphics::image(t(hS$dataSimulation), col=c('red', 'green', 'blue'),
breaks=c(0, 8, 776, 20000))
graphics::image(t(hS$dataSimulation), col=c('red', 'green', 'blue'),
breaks=c(0, 500, 1000, 20000))
graphics::image(t(hS$dataSimulation), col=c('red', 'green', 'blue'),
breaks=c(0, 500, 1000, 20000))
dev.off()
graphics::image(t(hS$dataSimulation), col=c('red', 'green', 'blue'),
breaks=c(0, 500, 1000, 20000))
graphics::image(t(hS$dataSimulation), col=c('red', 'green', 'blue'),
breaks=c(500, 1000, 1500, 20000))
graphics::image(t(hS$dataSimulation), col=c('red', 'green', 'blue'),
breaks=c(500, 1000, 1500, 20000))
graphics::image(hS$dataSimulation, col=c('red', 'green', 'blue'),
breaks=c(500, 1000, 1500, 20000))
graphics::image(hS$dataSimulation, col=c('red', 'green', 'blue'),
breaks=c(0, 1000, 1500, 20000))
graphics::image(hS$dataSimulation, col=c('red', 'green'),
breaks=c(0, 1500, 20000))
graphics::image(t(hS$dataSimulation), col=c('red', 'green'),
breaks=c(0, 1500, 20000))
graphics::image(t(hS$dataSimulation), col=c('red', 'white'),
breaks=c(0, 1500, 20000))
graphics::image(t(hS$dataSimulation), col=c('red', 'blue'),
breaks=c(0, 1500, 20000))
graphics::image(t(hS$dataSimulation), col=c('orange', 'blue'),
breaks=c(0, 1500, 20000))
graphics::image(t(hS$dataSimulation), col=c('green', 'blue'),
breaks=c(0, 1500, 20000))
dim(hS$dataSimulation)
dim(hS$dataSimulation)
require("grDevices") # for colours
x <- y <- seq(-4*pi, 4*pi, length.out = 27)
r <- sqrt(outer(x^2, y^2, "+"))
image(z = z <- cos(r^2)*exp(-r/6), col = gray.colors(33))
image(z, axes = FALSE, main = "Math can be beautiful ...",
xlab = expression(cos(r^2) * e^{-r/6}))
contour(z, add = TRUE, drawlabels = FALSE)
require("grDevices") # for colours
x <- y <- seq(-4*pi, 4*pi, length.out = 27)
r <- sqrt(outer(x^2, y^2, "+"))
image(z = z <- cos(r^2)*exp(-r/6), col = gray.colors(33))
image(z, axes = FALSE, main = "Math can be beautiful ...",
xlab = expression(cos(r^2) * e^{-r/6}))
contour(z, add = TRUE, drawlabels = FALSE)
image(t(volcano)[ncol(volcano):1,])
image(volcano)
image(t(volcano)[ncol(volcano):1,])
image(volcano)
image(t(volcano)[ncol(volcano):1,])
image(volcano)
image(t(volcano)[ncol(volcano):1,])
x <- 10*(1:nrow(volcano))
y <- 10*(1:ncol(volcano))
image(x, y, volcano, col = hcl.colors(100, "terrain"), axes = FALSE)
contour(x, y, volcano, levels = seq(90, 200, by = 5),
add = TRUE, col = "brown")
axis(1, at = seq(100, 800, by = 100))
axis(2, at = seq(100, 600, by = 100))
box()
title(main = "Maunga Whau Volcano", font.main = 4)
image(t(volcano)[ncol(volcano):1,])
x <- 10*(1:nrow(volcano))
y <- 10*(1:ncol(volcano))
image(x, y, volcano, col = hcl.colors(100, "terrain"), axes = FALSE)
contour(x, y, volcano, levels = seq(90, 200, by = 5),
add = TRUE, col = "brown")
axis(1, at = seq(100, 800, by = 100))
x
axis(2, at = seq(100, 600, by = 100))
box()
title(main = "Maunga Whau Volcano", font.main = 4)
gplots::heatmap.2(hS$dataSimulation, trace = "none",
dendrogram = "none", Colv=FALSE,
#col = plotColor,
#ColSideColors = simClusters,
main = "Simulated Data",
distfun=function(x) as.dist(1-cor(t(x), method = "s")))
graphics::image(hS$simulated.refCor)
graphics::image(hS$simulated.refCor)
dev.off()
dev.off()
graphics::image(hS$simulated.refCor)
dim(hS$simulated.refCor)
tmp <- t(cor(similarity$dataReference,
similarity$dataSimulation,
method = corMethod))
tmp <- t(cor(hS$dataReference,
hS$dataSimulation,
method = corMethod))
tmp <- t(cor(hS$dataReference,
hS$dataSimulation,
method = 'spearman'))
image(tmp)
tmp <- cor(hS$dataReference,
hS$dataSimulation,
method = 'spearman')
image(tmp)
tmp <- t(cor(hS$dataReference,
hS$dataSimulation,
method = 'spearman'))
image(tmp)
tmp <- cor(hS$dataReference,
hS$dataSimulation,
method = 'spearman')
image(tmp)
tmp <- t(cor(hS$dataReference,
hS$dataSimulation,
method = 'spearman'))
image(tmp)
tmp <- cor(hS$dataReference,
hS$dataSimulation,
method = 'spearman')
image(tmp)
dim(tmp)
dim(hS$dataReference)
dim(hS$dataSimulation)
dim(tmp)
tmp <- cor(hS$dataReference,
hS$dataSimulation,
method = 'spearman')
dim(hS$dataReference)
dim(hS$dataSimulation)
dim(tmp)
image(tmp)
image(t(tmp))
image(tmp)
image(t(tmp))
?`cor,AtomicList,AtomicList-method`
?`cor,AtomicList,AtomicList-method`
?cor
circuit_idx <- rownames(circuit_metrics)[1]
circuit_idx # "0.07-32-0.75" - top circuit in all topologies
racipe <- readRDS(file = paste('../circuits.sim/circuit_simulated_',
circuit_idx, '.rds', sep = '') )
names(racipe)
length(names(racipe))
sRACIPE::sracipePlotCircuit(racipe, plotToFile = T)
class(racipe)
names(racipe)
assays(racipe)
circuit_tpo <- sracipeCircuit(racipe)
length(unique(sort(c(circuit_tpo$Source, circuit_tpo$Target)) ))
TFs_in_circuit <- union(circuit_tpo$Source, circuit_tpo$Target)
length(TFs_in_circuit)
fname.hS <- paste(hS.dir, 'hS_', circuit_idx, '.rds', sep = '')
fname.hS
hS <- readRDS(file = fname.hS)
hS$AvgDist
hS$simulated.cluster.freq
hS$simulated.cluster.freq[2] + hS$simulated.cluster.freq[3]
library(nnet)
max(circuit_metrics$Nodes)
pos.max <- which.is.max(circuit_metrics$Nodes)
circuit_idx <- rownames(circuit_metrics)[pos.max]
circuit_idx # 0.08-60-0.3
racipe <- readRDS(file = paste('../circuits.sim/circuit_simulated_',
circuit_idx, '.rds', sep = '') )
names(racipe)
length(names(racipe))
sRACIPE::sracipePlotCircuit(racipe, plotToFile = T)
class(racipe)
names(racipe)
assays(racipe)
circuit_tpo <- sracipeCircuit(racipe)
length(unique(sort(c(circuit_tpo$Source, circuit_tpo$Target)) ))
TFs_in_circuit <- union(circuit_tpo$Source, circuit_tpo$Target)
length(TFs_in_circuit)
fname.hS <- paste(hS.dir, 'hS_', circuit_idx, '.rds', sep = '')
fname.hS
hS <- readRDS(file = fname.hS)
hS$AvgDist
hS$simulated.cluster.freq
hS$simulated.cluster.freq[2] + hS$simulated.cluster.freq[3]
remove(list = ls())
library(sRACIPE)
library(NetAct)
library(gplots)
hS.dir <- '../circuits.hS/'
outdir <- './data/'
dir.create(outdir)
figdir <- './figs/'
dir.create(figdir)
circuit_metrics <- read.csv(file = '../results/summary.circuits.sim.sorted.csv', row.names = 1)
circuit_idx <- rownames(circuit_metrics)[1]
circuit_idx # "0.07-32-0.75" - top circuit in all topologies
library(nnet)
max(circuit_metrics$Nodes)
min(circuit_metrics$Nodes)
pos.min <- which.min(circuit_metrics$Nodes)
circuit_idx <- rownames(circuit_metrics)[pos.min]
circuit_idx # 0.05-4-0.85
racipe <- readRDS(file = paste('../circuits.sim/circuit_simulated_',
circuit_idx, '.rds', sep = '') )
names(racipe)
length(names(racipe))
sRACIPE::sracipePlotCircuit(racipe, plotToFile = T)
class(racipe)
sRACIPE:: sracipePlotCircuit(racipe, plotToFile = T)
class(racipe)
names(racipe)
assays(racipe)
circuit_tpo <- sracipeCircuit(racipe)
length(unique(sort(c(circuit_tpo$Source, circuit_tpo$Target)) ))
outdir <- './data/'
fname.out <- paste(outdir, 'circuit-', circuit_idx, '.tpo' ,sep = '')
write.table(circuit_tpo, file = fname.out, sep = '\t', quote = F, row.names = F)
TFs_in_circuit <- union(circuit_tpo$Source, circuit_tpo$Target)
length(TFs_in_circuit)
fname.out <- paste(outdir, 'TFs-', circuit_idx, '.txt' ,sep = '')
write.table(TFs_in_circuit, file = fname.out, sep = '\t', quote = F, row.names = F)
sRACIPE::sracipePlotData(racipe, plotToFile = T,
nClusters = 3,
clustMethod = "ward.D2")
sRACIPE::sracipePlotData(racipe, plotToFile = T)
assayDataTmp <- assays(racipe)
gplots::heatmap.2((assayDataTmp[[1]]),
Colv = ddCol,
Rowv = ddRow,
trace = "none",
col = col,
ColSideColors = clustColors
)
gplots::heatmap.2((assayDataTmp[[1]]),
Colv = TRUE,
Rowv = TRUE,
trace = "none"
)
fname.hS <- paste(hS.dir, 'hS_', circuit_idx, '.rds', sep = '')
fname.hS
hS <- readRDS(file = fname.hS)
hS$AvgDist
hS$simulated.cluster.freq
hS$simulated.cluster.freq[2] + hS$simulated.cluster.freq[3]
hS$KL
par(oma=c(1,1,1,1)); # bottom, left, top, right
heatmap.2(hS$dataReference, trace = 'none')
hS.ref <- hS$dataReference
WIDTH <- 8
HEIGHT <- 8
figname <- paste(figdir, 'heatmap.refData-', WIDTH, 'x', HEIGHT,'.pdf', sep = '')
pdf(file = figname, paper = 'special', width = WIDTH, height = HEIGHT)
par(mfrow = c(1, 1))
par(oma=c(2,1,1,1)); # bottom, left, top, right
heatmap.2(hS$dataReference, trace = 'none')
dev.off()
simulated.refCor <- hS$simulated.refCor
dim(simulated.refCor)
WIDTH <- 8
HEIGHT <- 6
figname <- paste(figdir, 'heatmap.simulated.refCor-', WIDTH, 'x', HEIGHT,'.pdf', sep = '')
pdf(file = figname, paper = 'special', width = WIDTH, height = HEIGHT)
graphics::image(hS$simulated.refCor)
dev.off()
names(hS)
hS.simdata <- hS$dataSimulation
dim(hS.simdata)
class(hS.simdata)
gplots::heatmap.2(hS$dataSimulation,
Colv = FALSE,
Rowv = TRUE,
trace = 'none',
#breaks = c(cols.CL0, (cols.CL0+cols.CL1), (cols.CL0+cols.CL1+cols.CL2)),
#col = c('red', 'green', 'blue')
colsep = c(cols.CL0, (cols.CL0+cols.CL1))
)
hS$simulated.cluster.freq
remove(list = ls())
library(sRACIPE)
library(NetAct)
library(gplots)
hS.dir <- '../circuits.hS/'
outdir <- './data/'
dir.create(outdir)
figdir <- './figs/'
dir.create(figdir)
circuit_metrics <- read.csv(file = '../results/summary.circuits.sim.sorted.csv', row.names = 1)
circuit_idx <- rownames(circuit_metrics)[1]
circuit_idx # "0.07-32-0.75" - top circuit in all topologies
min(circuit_metrics$Nodes)
pos.min <- which.min(circuit_metrics$Nodes)
circuit_idx <- rownames(circuit_metrics)[pos.min]
circuit_idx # 0.05-4-0.85
racipe <- readRDS(file = paste('../circuits.sim/circuit_simulated_',
circuit_idx, '.rds', sep = '') )
names(racipe)
length(names(racipe))
TFs_in_circuit <- union(circuit_tpo$Source, circuit_tpo$Target)
length(TFs_in_circuit)
circuit_tpo <- sracipeCircuit(racipe)
length(unique(sort(c(circuit_tpo$Source, circuit_tpo$Target)) ))
TFs_in_circuit <- union(circuit_tpo$Source, circuit_tpo$Target)
length(TFs_in_circuit)
fname.hS <- paste(hS.dir, 'hS_', circuit_idx, '.rds', sep = '')
fname.hS
hS <- readRDS(file = fname.hS)
hS$AvgDist
hS$simulated.cluster.freq
hS$simulated.cluster.freq[2] + hS$simulated.cluster.freq[3]
hS$KL
simClusters <- as.character(col2[(1+similarity$simClusters)])
simClusters <- as.character(col2[(1+similarity$simClusters)])
simClusters <- as.character(col2[(1+hS$simClusters)])
hS$simClusters
simClusters <- as.character(col2[(1+hS$simClusters)])
col2 <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2",
"#D55E00", "#CC79A7")
simClusters <- as.character(col2[(1+hS$simClusters)])
plotColor <- c('red', 'green', 'blue')
gplots::heatmap.2(hS$dataSimulation, trace = "none",
dendrogram = "none", Colv=FALSE, col = plotColor,
ColSideColors = simClusters,
main = "Simulated Data",
distfun=function(x) as.dist(1-cor(t(x), method = "s")))
plotColor <- c("#5E4FA2", "#4F61AA", "#4173B3", "#3386BC", "#4198B6",
"#51ABAE", "#62BEA6", "#77C8A4", "#8ED1A4", "#A4DAA4",
"#B8E2A1", "#CBEA9D", "#DEF199", "#EAF69F", "#F2FAAC",
"#FAFDB8", "#FEFAB6", "#FEF0A5", "#FEE695", "#FDD985",
"#FDC978", "#FDB96A", "#FCA75E", "#F99254", "#F67D4A",
"#F26943", "#E85A47", "#DE4B4B", "#D33C4E", "#C1284A",
"#AF1446", "#9E0142")
gplots::heatmap.2(hS$dataSimulation, trace = "none",
dendrogram = "none", Colv=FALSE, col = plotColor,
ColSideColors = simClusters,
main = "Simulated Data",
distfun=function(x) as.dist(1-cor(t(x), method = "s")))
dev.off()
col2 <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2",
"#D55E00", "#CC79A7")
plotColor <- c("#5E4FA2", "#4F61AA", "#4173B3", "#3386BC", "#4198B6",
"#51ABAE", "#62BEA6", "#77C8A4", "#8ED1A4", "#A4DAA4",
"#B8E2A1", "#CBEA9D", "#DEF199", "#EAF69F", "#F2FAAC",
"#FAFDB8", "#FEFAB6", "#FEF0A5", "#FEE695", "#FDD985",
"#FDC978", "#FDB96A", "#FCA75E", "#F99254", "#F67D4A",
"#F26943", "#E85A47", "#DE4B4B", "#D33C4E", "#C1284A",
"#AF1446", "#9E0142")
simClusters <- as.character(col2[(1+hS$simClusters)])
gplots::heatmap.2(hS$dataSimulation, trace = "none",
dendrogram = "none", Colv=FALSE, col = plotColor,
ColSideColors = simClusters,
main = "Simulated Data",
distfun=function(x) as.dist(1-cor(t(x), method = "s")))
circuit_idx <- rownames(circuit_metrics)[1]
circuit_idx # "0.07-32-0.75" - top circuit in all topologies
racipe <- readRDS(file = paste('../circuits.sim/circuit_simulated_',
circuit_idx, '.rds', sep = '') )
names(racipe)
length(names(racipe))
sRACIPE:: sracipePlotCircuit(racipe, plotToFile = T)
class(racipe)
names(racipe)
assays(racipe)
circuit_tpo <- sracipeCircuit(racipe)
length(unique(sort(c(circuit_tpo$Source, circuit_tpo$Target)) ))
TFs_in_circuit <- union(circuit_tpo$Source, circuit_tpo$Target)
length(TFs_in_circuit)
fname.hS <- paste(hS.dir, 'hS_', circuit_idx, '.rds', sep = '')
fname.hS
hS <- readRDS(file = fname.hS)
hS$AvgDist
hS$simulated.cluster.freq
hS$simulated.cluster.freq[2] + hS$simulated.cluster.freq[3]
col2 <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2",
"#D55E00", "#CC79A7")
plotColor <- c("#5E4FA2", "#4F61AA", "#4173B3", "#3386BC", "#4198B6",
"#51ABAE", "#62BEA6", "#77C8A4", "#8ED1A4", "#A4DAA4",
"#B8E2A1", "#CBEA9D", "#DEF199", "#EAF69F", "#F2FAAC",
"#FAFDB8", "#FEFAB6", "#FEF0A5", "#FEE695", "#FDD985",
"#FDC978", "#FDB96A", "#FCA75E", "#F99254", "#F67D4A",
"#F26943", "#E85A47", "#DE4B4B", "#D33C4E", "#C1284A",
"#AF1446", "#9E0142")
simClusters <- as.character(col2[(1+hS$simClusters)])
gplots::heatmap.2(hS$dataSimulation, trace = "none",
dendrogram = "none", Colv=FALSE, col = plotColor,
ColSideColors = simClusters,
main = "Simulated Data",
distfun=function(x) as.dist(1-cor(t(x), method = "s")))
figdir
WIDTH <- 8
HEIGHT <- 6
figname <- paste(figdir, 'heatmap.simulated-', WIDTH, 'x', HEIGHT,'.pdf', sep = '')
pdf(file = figname, paper = 'special', width = WIDTH, height = HEIGHT)
gplots::heatmap.2(hS$dataSimulation, trace = "none",
dendrogram = "none", Colv=FALSE, col = plotColor,
ColSideColors = simClusters,
main = "Simulated Data",
distfun=function(x) as.dist(1-cor(t(x), method = "s")))
dev.off()
length(TFs_in_circuit)
library(nnet)
max(circuit_metrics$Nodes)
pos.max <- which.is.max(circuit_metrics$Nodes)
circuit_idx <- rownames(circuit_metrics)[pos.max]
circuit_idx # 0.08-60-0.3
racipe <- readRDS(file = paste('../circuits.sim/circuit_simulated_',
circuit_idx, '.rds', sep = '') )
names(racipe)
length(names(racipe))
circuit_tpo <- sracipeCircuit(racipe)
length(unique(sort(c(circuit_tpo$Source, circuit_tpo$Target)) ))
TFs_in_circuit <- union(circuit_tpo$Source, circuit_tpo$Target)
length(TFs_in_circuit)
fname.hS <- paste(hS.dir, 'hS_', circuit_idx, '.rds', sep = '')
fname.hS
hS <- readRDS(file = fname.hS)
hS$AvgDist
hS$simulated.cluster.freq
hS$simulated.cluster.freq[2] + hS$simulated.cluster.freq[3]
hS$KL
WIDTH <- 8
HEIGHT <- 6
figname <- paste(figdir, 'heatmap.simulated-', WIDTH, 'x', HEIGHT,'.pdf', sep = '')
pdf(file = figname, paper = 'special', width = WIDTH, height = HEIGHT)
gplots::heatmap.2(hS$dataSimulation, trace = "none",
dendrogram = "none", Colv=FALSE, col = plotColor,
ColSideColors = simClusters,
main = "Simulated Data",
distfun=function(x) as.dist(1-cor(t(x), method = "s")))
dev.off()
remove(list = ls())
library(sRACIPE)
library(NetAct)
library(gplots)
hS.dir <- '../circuits.hS/'
outdir <- './data/'
dir.create(outdir)
figdir <- './figs/'
figdir <- './figs.clusters/'
dir.create(figdir)
outdir <- './data.clusters/'
dir.create(outdir)
figdir <- './figs.clusters/'
dir.create(figdir)
circuit_metrics <- read.csv(file = '../results/summary.circuits.sim.sorted.csv', row.names = 1)
circuit_idx <- rownames(circuit_metrics)[1]
circuit_idx # "0.07-32-0.75" - top circuit in all topologies
min(circuit_metrics$Nodes)
pos.min <- which.min(circuit_metrics$Nodes)
circuit_idx <- rownames(circuit_metrics)[pos.min]
circuit_idx # 0.05-4-0.85
racipe <- readRDS(file = paste('../circuits.sim/circuit_simulated_',
circuit_idx, '.rds', sep = '') )
names(racipe)
length(names(racipe))
getwd()
