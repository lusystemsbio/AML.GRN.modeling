#par(mfrow = c(5, 2))
par(mfrow = c(2, 5))
par(oma=c(3,3,3,3)) # b, l, t, r - all sides have 3 lines of space - outer margin
par(mar=c(1,1,4,1) + 0.1) # b, l, t, r - inner margin
xlimit <- c((min(accuracy.df)-0.01), c(max(accuracy.df)+0.01))
#xlimit <- c(0.90, 0.96)
for(idx in rownames(accuracy.df)){
print(idx)
hist(unlist(accuracy.df[idx,]), breaks = 50, main = idx, xlim = xlimit)
#break()
}
dev.off()
WIDTH <- 8 #6
HEIGHT <- 6 #12
figname <- paste(figdir, 'hist.accuracies-', WIDTH, 'x', HEIGHT,'.pdf', sep = '')
pdf(file = figname, width = WIDTH, height = HEIGHT, paper = 'special')
#par(mfrow = c(5, 2))
par(mfrow = c(2, 5))
par(oma=c(3,3,3,3)) # b, l, t, r - all sides have 3 lines of space - outer margin
par(mar=c(1,1,4,1) + 0.1) # b, l, t, r - inner margin
xlimit <- c((min(accuracy.df)-0.01), c(max(accuracy.df)+0.01))
#xlimit <- c(0.90, 0.96)
for(idx in rownames(accuracy.df)){
print(idx)
hist(unlist(accuracy.df[idx,]), breaks = 50, main = idx, xlim = xlimit)
#break()
}
dev.off()
remove(list = ls())
NUM_CLUSTERS <- 2
NO.TOP.CIRCUITS <- 10
NO.REPEATS <- 2 #1000
library(igraph)
library(NetAct)
library(sRACIPE)
source('../../networks/functions.R')
source('../../networks/heatmapSimilarity.updated.R')
library(dplyr)
outdir.hS <- './circuits.hS/'
dir.create(outdir.hS)
outdir <- './results/'
dir.create(outdir)
datadir <- '../rankings.allCircuits/results/'
circuit_metrics.sim <- read.csv(file = paste0(datadir , "./summary.circuits.sim.sortedByAcc_flex.csv"), row.names = 1)
circuit_metrics.sim <- circuit_metrics.sim[1:NO.TOP.CIRCUITS, ]
coreTFs.list <- readRDS('../../tfSets/data/coreTFs.rds')
names(coreTFs.list)
targetDB.list <- readRDS('../../databases/targetDB.list.rds')
coreTFs.list <- readRDS('../../tfSets/data/coreTFs.rds')
names(coreTFs.list)
targetDB.list <- readRDS('../../databases/targetDB.list.rds')
names(targetDB.list)
fname.eset.brain_array <- '../../data.tfs/eset.brain_array.rda'
load(fname.eset.brain_array) # loads object eset.brain_array
fname.de.results <- '../../data.tfs/de.results.rda'
load(fname.de.results) # loads object de.results
tmp <- read.csv(file = paste0('../../networks/circuits/', 'clusterCut.REF.csv'), row.names = 1)
clusterCut.REF <- as.integer(tmp$x)
names(clusterCut.REF) <- as.character(rownames(tmp))
accuracy.df <- as.data.frame(matrix(nrow = nrow(circuit_metrics.sim), ncol = NO.REPEATS))
rownames(accuracy.df) <- rownames(circuit_metrics.sim)
for(circuit_idx in rownames(circuit_metrics.sim)){
# circuit_idx <- rownames(circuit_metrics.sim)[1]
# print(circuit_idx)
# break()
# obtain TF activities using NetAct:
fr <- strsplit(circuit_idx, split = '-')[[1]][1]
top.TFs.count <- strsplit(circuit_idx, split = '-')[[1]][2]
#coreTFs <- coreTFs.list[[top.TFs.count]]
coreTFs <- coreTFs.list[[fr]][[top.TFs.count]][['COMB']]
targetDB = targetDB.list[[fr]]
length(coreTFs)
coreTFs <- intersect(coreTFs, names(targetDB))
length(coreTFs)
a = TF_Activity(tfs = coreTFs,
GSDB = targetDB,
eset = eset.brain_array,
DErslt = de.results  #DErslt=de.results$Overall
)
data.REF <- a$all_activities
# obtain simulated data:
racipe <- readRDS(file = paste('../../networks/circuits.sim/circuit_simulated_',
circuit_idx, '.rds', sep = ''))
racipe <- sracipeNormalize(racipe)
data.sim <- assay(racipe,1)
# calculate similarity between activitites and racipe simulation data:
acc.v <- vector(mode = 'numeric', length = NO.REPEATS)
for(i in 1:NO.REPEATS){
print(i)
hS <- sracipeHeatmapSimilarity(dataReference = data.REF,
dataSimulation = data.sim,
returnData = T,
#nClusters = NUM_CLUSTERS,
clusterCut = clusterCut.REF)
acc.v[i] <-(hS$simulated.cluster.freq[2] + hS$simulated.cluster.freq[3])
}
accuracy.df[circuit_idx,] <- acc.v
#break()
}
View(accuracy.df)
remove(list = ls())
fname <-'./results.para/accuracy.dist.csv'
accuracy.df <- read.csv(file = fname, row.names = 1)
dim(accuracy.df)
hist(unlist(accuracy.df[1,]), breaks = 50)
hist(unlist(accuracy.df[2,]), breaks = 50)
hist(unlist(accuracy.df[3,]), breaks = 50)
NO.TOP.CIRCUITS <- 10
remove(list = ls())
NO.TOP.CIRCUITS <- 10
datadir <- '../rankings.allCircuits/results/'
circuit_metrics.sim <- read.csv(file = paste0(datadir , "./summary.circuits.sim.sortedByAcc_flex.csv"), row.names = 1)
circuit_metrics.sim <- circuit_metrics.sim[1:NO.TOP.CIRCUITS, ]
View(circuit_metrics.sim)
fname <-'./results.para/accuracy.dist.csv'
accuracy.df <- read.csv(file = fname, row.names = 1)
dim(accuracy.df)
par(mfrow = c(2, 5))
par(oma=c(3,3,3,3)) # b, l, t, r - all sides have 3 lines of space - outer margin
par(mar=c(1,1,4,1) + 0.1) # b, l, t, r - inner margin
xlimit <- c((min(accuracy.df)-0.01), c(max(accuracy.df)+0.01))
for(idx in rownames(accuracy.df)){
print(idx)
hist(unlist(accuracy.df[idx,]), breaks = 50, main = idx, xlim = xlimit)
#break()
}
hist(unlist(accuracy.df[1,]), breaks = 50)
dev.off()
hist(unlist(accuracy.df[1,]), breaks = 50)
hist(unlist(accuracy.df[1,]), breaks = 50, main = rownames(accuracy.df)[1])
idx <- rownames(accuracy.df)[1]
hist(unlist(accuracy.df[1,]), breaks = 50, main = idx)
circuit_metrics.sim[idx, "Accuracy"]
hist(unlist(accuracy.df[1,]), breaks = 50, main = idx)
abline(v = circuit_metrics.sim[idx, "Accuracy"], col="red", lwd=3, lty=2)
par(mfrow = c(2, 5))
par(oma=c(3,3,3,3)) # b, l, t, r - all sides have 3 lines of space - outer margin
par(mar=c(1,1,4,1) + 0.1) # b, l, t, r - inner margin
xlimit <- c((min(accuracy.df)-0.01), c(max(accuracy.df)+0.01))
for(idx in rownames(accuracy.df)){
print(idx)
hist(unlist(accuracy.df[idx,]), breaks = 50, main = idx, xlim = xlimit)
abline(v = circuit_metrics.sim[idx, "Accuracy"], col="red", lwd=3, lty=2)
#break()
}
figdir <- './figs/'
dir.create(figdir)
WIDTH <- 8 #6
HEIGHT <- 6 #12
figname <- paste(figdir, 'hist.accuracies-', WIDTH, 'x', HEIGHT,'.pdf', sep = '')
pdf(file = figname, width = WIDTH, height = HEIGHT, paper = 'special')
#par(mfrow = c(5, 2))
par(mfrow = c(2, 5))
par(oma=c(3,3,3,3)) # b, l, t, r - all sides have 3 lines of space - outer margin
par(mar=c(1,1,4,1) + 0.1) # b, l, t, r - inner margin
xlimit <- c((min(accuracy.df)-0.01), c(max(accuracy.df)+0.01))
#xlimit <- c(0.90, 0.96)
for(idx in rownames(accuracy.df)){
print(idx)
hist(unlist(accuracy.df[idx,]), breaks = 50, main = idx, xlim = xlimit)
abline(v = circuit_metrics.sim[idx, "Accuracy"], col="red", lwd=3, lty=2)
#break()
}
dev.off()
figdir <- './figs/'
dir.create(figdir)
WIDTH <- 12 #8 #6
HEIGHT <- 6 #12
figname <- paste(figdir, 'hist.accuracies-', WIDTH, 'x', HEIGHT,'.pdf', sep = '')
pdf(file = figname, width = WIDTH, height = HEIGHT, paper = 'special')
#par(mfrow = c(5, 2))
par(mfrow = c(2, 5))
par(oma=c(3,3,3,3)) # b, l, t, r - all sides have 3 lines of space - outer margin
par(mar=c(1,1,4,1) + 0.1) # b, l, t, r - inner margin
xlimit <- c((min(accuracy.df)-0.01), c(max(accuracy.df)+0.01))
#xlimit <- c(0.90, 0.96)
for(idx in rownames(accuracy.df)){
print(idx)
hist(unlist(accuracy.df[idx,]), breaks = 50, main = idx, xlim = xlimit)
abline(v = circuit_metrics.sim[idx, "Accuracy"], col="red", lwd=3, lty=2)
#break()
}
dev.off()
mean(unlist(accuracy.df[1,]))
idx <- rownames(accuracy.df)[1]
hist(unlist(accuracy.df[1,]), breaks = 50, main = idx)
abline(v = mean(unlist(accuracy.df[1,])), col="red", lwd=3, lty=1)
abline(v = circuit_metrics.sim[idx, "Accuracy"], col="red", lwd=3, lty=2)
dev.off()
idx <- rownames(accuracy.df)[1]
hist(unlist(accuracy.df[1,]), breaks = 50, main = idx)
abline(v = mean(unlist(accuracy.df[1,])), col="red", lwd=2, lty=1)
abline(v = circuit_metrics.sim[idx, "Accuracy"], col="red", lwd=2, lty=2)
figdir <- './figs/'
dir.create(figdir)
WIDTH <- 12 #8 #6
HEIGHT <- 6 #12
figname <- paste(figdir, 'hist.accuracies-', WIDTH, 'x', HEIGHT,'.pdf', sep = '')
pdf(file = figname, width = WIDTH, height = HEIGHT, paper = 'special')
#par(mfrow = c(5, 2))
par(mfrow = c(2, 5))
par(oma=c(3,3,3,3)) # b, l, t, r - all sides have 3 lines of space - outer margin
par(mar=c(1,1,4,1) + 0.1) # b, l, t, r - inner margin
xlimit <- c((min(accuracy.df)-0.01), c(max(accuracy.df)+0.01))
#xlimit <- c(0.90, 0.96)
for(idx in rownames(accuracy.df)){
print(idx)
hist(unlist(accuracy.df[idx,]), breaks = 50, main = idx, xlim = xlimit)
abline(v = mean(unlist(accuracy.df[idx,])), col="red", lwd=2, lty=1)
abline(v = circuit_metrics.sim[idx, "Accuracy"], col="red", lwd=2, lty=2)
#break()
}
dev.off()
figdir <- './figs/'
dir.create(figdir)
WIDTH <- 12 #8 #6
HEIGHT <- 6 #12
figname <- paste(figdir, 'hist.accuracies-', WIDTH, 'x', HEIGHT,'.pdf', sep = '')
pdf(file = figname, width = WIDTH, height = HEIGHT, paper = 'special')
#par(mfrow = c(5, 2))
par(mfrow = c(2, 5))
par(oma=c(3,3,3,3)) # b, l, t, r - all sides have 3 lines of space - outer margin
par(mar=c(1,1,4,1) + 0.1) # b, l, t, r - inner margin
xlimit <- c((min(accuracy.df)-0.01), c(max(accuracy.df)+0.01))
#xlimit <- c(0.90, 0.96)
for(idx in rownames(accuracy.df)){
print(idx)
main.str <- paste(ids, ':', circuit_metrics.sim[idx, "Nodes"], sep = '')
hist(unlist(accuracy.df[idx,]), breaks = 50, main = main.str, xlim = xlimit)
abline(v = mean(unlist(accuracy.df[idx,])), col="red", lwd=2, lty=1)
abline(v = circuit_metrics.sim[idx, "Accuracy"], col="red", lwd=2, lty=2)
#break()
}
dev.off()
figdir <- './figs/'
dir.create(figdir)
WIDTH <- 12 #8 #6
HEIGHT <- 6 #12
figname <- paste(figdir, 'hist.accuracies-', WIDTH, 'x', HEIGHT,'.pdf', sep = '')
pdf(file = figname, width = WIDTH, height = HEIGHT, paper = 'special')
#par(mfrow = c(5, 2))
par(mfrow = c(2, 5))
par(oma=c(3,3,3,3)) # b, l, t, r - all sides have 3 lines of space - outer margin
par(mar=c(1,1,4,1) + 0.1) # b, l, t, r - inner margin
xlimit <- c((min(accuracy.df)-0.01), c(max(accuracy.df)+0.01))
#xlimit <- c(0.90, 0.96)
for(idx in rownames(accuracy.df)){
print(idx)
main.str <- paste(idx, ':', circuit_metrics.sim[idx, "Nodes"], sep = '')
hist(unlist(accuracy.df[idx,]), breaks = 50, main = main.str, xlim = xlimit)
abline(v = mean(unlist(accuracy.df[idx,])), col="red", lwd=2, lty=1)
abline(v = circuit_metrics.sim[idx, "Accuracy"], col="red", lwd=2, lty=2)
#break()
}
dev.off()
View(accuracy.df)
remove(list = ls())
outdir <- './results/'
circuit_metrics.sim <- read.csv(file = './results/summary.circuits.sim.sortedByAcc_flex.csv', row.names = 1)
NO.TOP.CIRCUITS <- 10
datadir <- '../rankings.allCircuits/results/'
circuit_metrics.sim <- read.csv(file = paste0(datadir , "./summary.circuits.sim.sortedByAcc_flex.csv"), row.names = 1)
circuit_metrics.sim <- circuit_metrics.sim[1:NO.TOP.CIRCUITS, ]
fname <-'./results.para/accuracy.dist.csv'
accuracy.df <- read.csv(file = fname, row.names = 1)
dim(accuracy.df)
View(circuit_metrics.sim)
circuit_metrics.sim <- read.csv(file = '../rankings.allCircuits/results/summary.circuits.sim.sortedByAcc_flex.csv', row.names = 1)
dim(circuit_metrics.sim)
fname <-'./results.para/accuracy.dist.csv'
accuracy.df <- read.csv(file = fname, row.names = 1)
dim(accuracy.df)
perc.rank.3 <- function(x, xo)  (100-length(x[x <= xo])/length(x)*100)
topCkts <- rownames(circuit_metrics.sim)[1:10]
topCkts
View(accuracy.df)
for(idx in rownames(accuracy.df)){
print(idx)
}
nrow(circuit_m.sim)
prank.samples.acc <- as.data.frame(matrix(nrow = nrow(accuracy.df)),
ncol = ( ncol(accuracy.df)+1) )
rownames(prank.samples.acc) <- row.names(accuracy.df)
rownames(prank.samples.acc) <- row.names(accuracy.df)
colnames(prank.samples.acc) <- c('nodes', colnames(accuracy.df))
colnames(prank.samples.acc) <- c('nodes', colnames(accuracy.df))
prank.samples.acc <- as.data.frame(matrix(nrow = nrow(accuracy.df)),
ncol = (ncol(accuracy.df)+1) )
rownames(prank.samples.acc) <- row.names(accuracy.df)
colnames(prank.samples.acc) <- c('nodes', colnames(accuracy.df))
length(c('nodes', colnames(accuracy.df)) )
View(prank.samples.acc)
ncol(accuracy.df)
prank.samples.acc <- as.data.frame(matrix(nrow = nrow(accuracy.df)),
ncol = (ncol(accuracy.df)+1) )
View(prank.samples.acc)
nrow(accuracy.df))
nrow(accuracy.df)
prank.samples.acc <- as.data.frame(matrix(nrow = nrow(accuracy.df),
ncol = (ncol(accuracy.df)+1) )
rownames(prank.samples.acc) <- row.names(accuracy.df)
colnames(prank.samples.acc) <- c('nodes', colnames(accuracy.df))
prank.samples.acc$nodes <- circuit_m.sim$Nodes
prank.samples.flex <- as.data.frame(matrix(nrow = nrow(circuit_m.sim),
ncol = (length(names(circuit_metrics.sim.list))+1)))
rownames(prank.samples.flex) <- row.names(circuit_metrics.sim)[1:10]
colnames(prank.samples.flex) <- c('nodes', names(circuit_metrics.sim.list))
prank.samples.flex$nodes <- circuit_m.sim$Nodes
for(idx in rownames(accuracy.df)){
print(idx)
}
# create data structures
circuit_m.sim <- circuit_metrics.sim.list$S1
# check whetehr they are the same circuits
topCkts <- rownames(circuit_metrics.sim)[1:10]
sum(rownames(circuit_m.sim) == topCkts)
prank.samples.acc <- as.data.frame(matrix(nrow = nrow(circuit_m.sim),
ncol = (length(names(circuit_metrics.sim.list))+1)))
rownames(prank.samples.acc) <- row.names(circuit_metrics.sim)[1:10]
colnames(prank.samples.acc) <- c('nodes', names(circuit_metrics.sim.list))
prank.samples.acc$nodes <- circuit_m.sim$Nodes
prank.samples.flex <- as.data.frame(matrix(nrow = nrow(circuit_m.sim),
ncol = (length(names(circuit_metrics.sim.list))+1)))
rownames(prank.samples.flex) <- row.names(circuit_metrics.sim)[1:10]
colnames(prank.samples.flex) <- c('nodes', names(circuit_metrics.sim.list))
prank.samples.flex$nodes <- circuit_m.sim$Nodes
# perform ranking for each sample
for(sample_name in names(circuit_metrics.sim.list)){
print(sample_name)
circuit_m.sim <- circuit_metrics.sim.list[[sample_name]]
# prank.acc <- sapply(circuit_m.sim$Accuracy, function (x) perc.rank.3(circuit_metrics.sim$Accuracy, x))
# prank.flex <- sapply(circuit_m.sim$flexibility, function (x) perc.rank.3(circuit_metrics.sim$flexibility, x))
prank.samples.acc[sample_name] <- sapply(circuit_m.sim$Accuracy, function (x) perc.rank.3(circuit_metrics.sim$Accuracy, x))
prank.samples.flex[sample_name] <- sapply(circuit_m.sim$flexibility, function (x) perc.rank.3(circuit_metrics.sim$flexibility, x))
#print(sum(rownames(circuit_m.sim) == topCkts))
}
prank.samples.acc$mean <- apply(prank.samples.acc[2:ncol(prank.samples.acc)], 1, mean)
prank.samples.acc$sd <- apply(prank.samples.acc[2:ncol(prank.samples.acc)], 1, sd)
prank.samples.flex$mean <- apply(prank.samples.flex[2:ncol(prank.samples.flex)], 1, mean)
prank.samples.flex$sd <- apply(prank.samples.flex[2:ncol(prank.samples.flex)], 1, sd)
prank.acc.bg <- sapply(circuit_metrics.sim$Accuracy[1:10], function (x) perc.rank.3(circuit_metrics.sim$Accuracy, x))
prank.flex.bg <- sapply(circuit_metrics.sim$flexibility[1:10], function (x) perc.rank.3(circuit_metrics.sim$flexibility, x))
prank.samples.acc$bg <- prank.acc.bg
prank.samples.flex$bg <- prank.flex.bg
prank.samples.avg <- cbind(prank.samples.flex$nodes,
(prank.samples.acc$mean + prank.samples.flex$mean)/2,
(prank.samples.acc$bg+prank.samples.flex$bg)/2)
rownames(prank.samples.avg) <- rownames(prank.samples.flex)
colnames(prank.samples.avg) <- c('nodes', 'avg.rank.samples', 'avg.rank.bg')
write.csv(format(prank.samples.acc, digits = 3), file = './results/prank.samples.acc.csv', row.names = T, quote = F)
write.csv(format(prank.samples.flex, digits = 3), file = './results/prank.samples.flex.csv', row.names = T, quote = F)
write.csv(format(prank.samples.avg, digits = 3), file = './results/prank.samples.avg.csv', row.names = T, quote = F)
prank.samples.acc <- as.data.frame(matrix(nrow = nrow(accuracy.df),
ncol = (ncol(accuracy.df)+1)) )
rownames(prank.samples.acc) <- row.names(accuracy.df)
colnames(prank.samples.acc) <- c('nodes', colnames(accuracy.df))
prank.samples.acc$nodes <- circuit_m.sim$Nodes
prank.samples.acc$nodes <- circuit_m.sim$Nodes
prank.samples.acc$nodes <- circuit_m.sim$Nodes[1:NO.TOP.CIRCUITS]
prank.samples.acc$nodes <- circuit_metrics.sim$Nodes[1:NO.TOP.CIRCUITS]
prank.samples.flex <- as.data.frame(matrix(nrow = nrow(accuracy.df),
ncol = (ncol(accuracy.df)+1)))
colnames(prank.samples.flex) <- c('nodes', colnames(accuracy.df))
prank.samples.flex$nodes <- circuit_metrics.sim$Nodes[1:NO.TOP.CIRCUITS]
View(prank.samples.flex)
prank.samples.flex <- as.data.frame(matrix(nrow = nrow(accuracy.df),
ncol = (ncol(accuracy.df)+1)))
rownames(prank.samples.flex) <- row.names(circuit_metrics.sim)[1:10]
colnames(prank.samples.flex) <- c('nodes', colnames(accuracy.df))
prank.samples.flex$nodes <- circuit_metrics.sim$Nodes[1:NO.TOP.CIRCUITS]
View(prank.samples.acc)
View(prank.samples.flex)
class(accuracy.df[idx, ])
unlist
unlist
unlist(accuracy.df[idx, ])
for(idx in rownames(accuracy.df)){
print(idx)
prank.samples.acc[sample_name] <- sapply(unlist(accuracy.df[idx, ]), function (x) perc.rank.3(circuit_metrics.sim$Accuracy, x))
#prank.samples.flex[sample_name] <- sapply(circuit_m.sim$flexibility, function (x) perc.rank.3(circuit_metrics.sim$flexibility, x))
}
for(idx in rownames(accuracy.df)){
print(idx)
prank.samples.acc[idx, 2:ncol(prank.samples.acc)] <- sapply(unlist(accuracy.df[idx, ]), function (x) perc.rank.3(circuit_metrics.sim$Accuracy, x))
#prank.samples.flex[sample_name] <- sapply(circuit_m.sim$flexibility, function (x) perc.rank.3(circuit_metrics.sim$flexibility, x))
}
View(prank.samples.acc)
dim(prank.samples.acc)
prank.samples.acc <- as.data.frame(matrix(nrow = nrow(accuracy.df),
ncol = ncol(accuracy.df)) )
rownames(prank.samples.acc) <- row.names(accuracy.df)
colnames(prank.samples.acc) <- colnames(accuracy.df)
prank.samples.acc$nodes <- circuit_metrics.sim$Nodes[1:NO.TOP.CIRCUITS]
prank.samples.flex <- as.data.frame(matrix(nrow = nrow(accuracy.df),
ncol = ncol(accuracy.df)))
rownames(prank.samples.flex) <- row.names(circuit_metrics.sim)[1:10]
colnames(prank.samples.flex) <- colnames(accuracy.df)
prank.samples.flex$nodes <- circuit_metrics.sim$Nodes[1:NO.TOP.CIRCUITS]
for(idx in rownames(accuracy.df)){
print(idx)
prank.samples.acc[idx, ] <- sapply(unlist(accuracy.df[idx, ]), function (x) perc.rank.3(circuit_metrics.sim$Accuracy, x))
#prank.samples.flex[sample_name] <- sapply(circuit_m.sim$flexibility, function (x) perc.rank.3(circuit_metrics.sim$flexibility, x))
}
unlist(accuracy.df[idx, ])
dim(prank.samples.acc)
prank.samples.acc <- as.data.frame(matrix(nrow = nrow(accuracy.df),
ncol = ncol(accuracy.df)) )
rownames(prank.samples.acc) <- row.names(accuracy.df)
colnames(prank.samples.acc) <- colnames(accuracy.df)
prank.samples.acc$nodes <- circuit_metrics.sim$Nodes[1:NO.TOP.CIRCUITS]
prank.samples.flex <- as.data.frame(matrix(nrow = nrow(accuracy.df),
ncol = ncol(accuracy.df)))
rownames(prank.samples.flex) <- row.names(circuit_metrics.sim)[1:10]
colnames(prank.samples.flex) <- colnames(accuracy.df)
dim(prank.samples.acc)
View(prank.samples.acc)
dim(prank.samples.acc)
tail(colnames(prank.samples.acc))
prank.samples.acc <- as.data.frame(matrix(nrow = nrow(accuracy.df),
ncol = ncol(accuracy.df)) )
rownames(prank.samples.acc) <- row.names(accuracy.df)
colnames(prank.samples.acc) <- colnames(accuracy.df)
prank.samples.flex <- as.data.frame(matrix(nrow = nrow(accuracy.df),
ncol = ncol(accuracy.df)))
rownames(prank.samples.flex) <- row.names(circuit_metrics.sim)[1:10]
colnames(prank.samples.flex) <- colnames(accuracy.df)
for(idx in rownames(accuracy.df)){
print(idx)
prank.samples.acc[idx, ] <- sapply(unlist(accuracy.df[idx, ]), function (x) perc.rank.3(circuit_metrics.sim$Accuracy, x))
#prank.samples.flex[sample_name] <- sapply(circuit_m.sim$flexibility, function (x) perc.rank.3(circuit_metrics.sim$flexibility, x))
}
par(mfrow = c(2, 5))
par(oma=c(3,3,3,3)) # b, l, t, r - all sides have 3 lines of space - outer margin
par(mar=c(1,1,4,1) + 0.1) # b, l, t, r - inner margin
xlimit <- c((min(prank.samples.acc)-0.01), c(max(prank.samples.acc)+0.01))
for(idx in rownames(prank.samples.acc)){
print(idx)
main.str <- paste(idx, ':', circuit_metrics.sim[idx, "Nodes"], sep = '')
hist(unlist(prank.samples.acc[idx,]), breaks = 50, main = main.str, xlim = xlimit)
abline(v = mean(unlist(prank.samples.acc[idx,])), col="red", lwd=2, lty=1)
abline(v = circuit_metrics.sim[idx, "idxAccuracy"], col="red", lwd=2, lty=2)
#break()
}
par(mfrow = c(2, 5))
par(oma=c(3,3,3,3)) # b, l, t, r - all sides have 3 lines of space - outer margin
par(mar=c(1,1,4,1) + 0.1) # b, l, t, r - inner margin
xlimit <- c((min(prank.samples.acc)-0.01), c(max(prank.samples.acc)+0.01))
for(idx in rownames(prank.samples.acc)){
print(idx)
main.str <- paste(idx, ':', circuit_metrics.sim[idx, "Nodes"], sep = '')
hist(unlist(prank.samples.acc[idx,]), breaks = 50, main = main.str) #, xlim = xlimit)
abline(v = mean(unlist(prank.samples.acc[idx,])), col="red", lwd=2, lty=1)
abline(v = circuit_metrics.sim[idx, "idxAccuracy"], col="red", lwd=2, lty=2)
#break()
}
xlimit <- c((min(prank.samples.acc)-0.01), c(max(prank.samples.acc)+0.01))
for(idx in rownames(prank.samples.acc)){
print(idx)
main.str <- paste(idx, ': ', circuit_metrics.sim[idx, "Nodes"], sep = '')
hist(unlist(prank.samples.acc[idx,]), breaks = 50, main = main.str) #, xlim = xlimit)
abline(v = mean(unlist(prank.samples.acc[idx,])), col="red", lwd=2, lty=1)
abline(v = circuit_metrics.sim[idx, "idxAccuracy"], col="red", lwd=2, lty=2)
#break()
}
for(idx in rownames(prank.samples.acc)){
print(idx)
main.str <- paste(idx, ':', circuit_metrics.sim[idx, "Nodes"], sep = '')
hist(unlist(prank.samples.acc[idx,]), breaks = 50, main = main.str) #, xlim = xlimit)
abline(v = mean(unlist(prank.samples.acc[idx,])), col="red", lwd=2, lty=1)
abline(v = circuit_metrics.sim[idx, "idxAccuracy"], col="red", lwd=2, lty=2)
#break()
}
figdir <- './figs/'
dir.create(figdir)
WIDTH <- 12 #8 #6
HEIGHT <- 6 #12
figname <- paste(figdir, 'percentile.rank.accuracy-', WIDTH, 'x', HEIGHT,'.pdf', sep = '')
pdf(file = figname, width = WIDTH, height = HEIGHT, paper = 'special')
par(mfrow = c(2, 5))
par(oma=c(3,3,3,3)) # b, l, t, r - all sides have 3 lines of space - outer margin
par(mar=c(1,1,4,1) + 0.1) # b, l, t, r - inner margin
xlimit <- c((min(prank.samples.acc)-0.01), c(max(prank.samples.acc)+0.01))
for(idx in rownames(prank.samples.acc)){
print(idx)
main.str <- paste(idx, ':', circuit_metrics.sim[idx, "Nodes"], sep = '')
hist(unlist(prank.samples.acc[idx,]), breaks = 50, main = main.str) #, xlim = xlimit)
abline(v = mean(unlist(prank.samples.acc[idx,])), col="red", lwd=2, lty=1)
abline(v = circuit_metrics.sim[idx, "idxAccuracy"], col="red", lwd=2, lty=2)
#break()
}
dev.off()
par(mfrow = c(2, 5))
par(oma=c(3,3,3,3)) # b, l, t, r - all sides have 3 lines of space - outer margin
par(mar=c(1,1,4,1) + 0.1) # b, l, t, r - inner margin
xlimit <- c((min(prank.samples.acc)-0.01), c(max(prank.samples.acc)+0.01))
for(idx in rownames(prank.samples.acc)){
print(idx)
main.str <- paste(idx, ':', circuit_metrics.sim[idx, "Nodes"], sep = '')
hist(unlist(prank.samples.acc[idx,]), breaks = 50, main = main.str) #, xlim = xlimit)
#abline(v = mean(unlist(prank.samples.acc[idx,])), col="red", lwd=2, lty=1)
abline(v = circuit_metrics.sim[idx, "idxAccuracy"], col="red", lwd=2, lty=2)
#break()
}
View(circuit_metrics.sim)
for(idx in rownames(prank.samples.acc)){
print(idx)
main.str <- paste(idx, ':', circuit_metrics.sim[idx, "Nodes"], sep = '')
hist(unlist(prank.samples.acc[idx,]), breaks = 50, main = main.str) #, xlim = xlimit)
abline(v = mean(unlist(prank.samples.acc[idx,])), col="red", lwd=2, lty=1)
abline(v = circuit_metrics.sim[idx, "idxAccuracy"], col="red", lwd=2, lty=2)
#break()
}
