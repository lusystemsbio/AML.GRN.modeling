top.TFs.count <- strsplit(circuit_idx, split = '-')[[1]][2]
#coreTFs <- coreTFs.list[[top.TFs.count]]
coreTFs <- coreTFs.list[[fr]][[top.TFs.count]][['COMB']]
targetDB = targetDB.list[[fr]]
length(coreTFs)
coreTFs <- intersect(coreTFs, names(targetDB))
length(coreTFs)
a = TF_Activity(tfs = coreTFs,
GSDB = targetDB,
eset = eset.brain_array,
DErslt = de.results  #DErslt=de.results$Overall
)
data.REF <- a$all_activities
# obtain simulated data:
racipe <- readRDS(file = paste('../../../networks/circuits.sim/circuit_simulated_',
circuit_idx, '.rds', sep = ''))
racipe <- sracipeNormalize(racipe)
data.sim <- assay(racipe,1)
# calculate similarity between activitites and racipe simulation data:
# acc.v <- vector(mode = 'numeric', length = NO.REPEATS)
# for(i in 1:NO.REPEATS){
#   print(i)
#   hS <- sracipeHeatmapSimilarity(dataReference = data.REF,
#                                  dataSimulation = data.sim,
#                                  returnData = T,
#                                  #nClusters = NUM_CLUSTERS,
#                                  clusterCut = clusterCut.REF)
#   acc.v[i] <-(hS$simulated.cluster.freq[2] + hS$simulated.cluster.freq[3])
# }
# write.csv(acc.v, file = paste(outdir, "./accuracy-", circuit_idx,".csv", sep = ''),
#           row.names = T, quote = F)
#
# accuracy.df[circuit_idx,] <- acc.v
# accuracy.list[[circuit_idx]] <- acc.v
#break()
acc.v <- sapply(seq(1,NO.REPEATS),
function(x){
hS <- sracipeHeatmapSimilarity(dataReference = data.REF,
dataSimulation = data.sim,
returnData = T,
#nClusters = NUM_CLUSTERS,
clusterCut = clusterCut.REF)
return(hS$simulated.cluster.freq[2] + hS$simulated.cluster.freq[3])
}
)
write.csv(acc.v, file = paste(outdir, "./accuracy-", circuit_idx,".csv", sep = ''),
row.names = T, quote = F)
accuracy.df[circuit_idx,] <- acc.v
}
View(accuracy.df)
View(rv)
class(rv)
rownames(rv) <- rownames(circuit_metrics.sim)
View(accuracy.df)
stopCluster(cl)
class(rv)
rownames(rv)
library(doParallel)
library(foreach)
NO_AVAILABLE_CORES <- detectCores()
print(NO_AVAILABLE_CORES)
cl <- makeCluster(NO_AVAILABLE_CORES, setup_strategy = "sequential")
class(cl)
registerDoParallel(cl)
getDoParWorkers()
set.seed(1)
rv = foreach(circuit_idx = rownames(circuit_metrics.sim), .combine = 'rbind', .inorder = TRUE) %dopar% {
library(sRACIPE)
library(NetAct)
fr <- strsplit(circuit_idx, split = '-')[[1]][1]
top.TFs.count <- strsplit(circuit_idx, split = '-')[[1]][2]
#coreTFs <- coreTFs.list[[top.TFs.count]]
coreTFs <- coreTFs.list[[fr]][[top.TFs.count]][['COMB']]
targetDB = targetDB.list[[fr]]
length(coreTFs)
coreTFs <- intersect(coreTFs, names(targetDB))
length(coreTFs)
a = TF_Activity(tfs = coreTFs,
GSDB = targetDB,
eset = eset.brain_array,
DErslt = de.results  #DErslt=de.results$Overall
)
data.REF <- a$all_activities
# obtain simulated data:
racipe <- readRDS(file = paste('../../../networks/circuits.sim/circuit_simulated_',
circuit_idx, '.rds', sep = ''))
racipe <- sracipeNormalize(racipe)
data.sim <- assay(racipe,1)
# calculate similarity between activitites and racipe simulation data:
acc.v <- sapply(seq(1,NO.REPEATS),
function(x){
hS <- sracipeHeatmapSimilarity(dataReference = data.REF,
dataSimulation = data.sim,
returnData = T,
#nClusters = NUM_CLUSTERS,
clusterCut = clusterCut.REF)
return(hS$simulated.cluster.freq[2] + hS$simulated.cluster.freq[3])
}
)
write.csv(acc.v, file = paste(outdir, "./accuracy-", circuit_idx,".csv", sep = ''),
row.names = T, quote = F)
acc.v
}
class(rv)
rownames(rv) <- rownames(circuit_metrics.sim)
View(rv)
write.csv(rv, file = paste0(outdir, "./accuracy.all.csv"), row.names = T, quote = F, col.names = F)
colnames(rv) <- paste('V', seq(1,NO.REPEATS), sep = '')
View(rv)
write.csv(rv, file = paste0(outdir, "./accuracy.all.csv"), row.names = T, quote = F)
stopCluster(cl)
remove(list = ls())
NUM_CLUSTERS <- 2
NO.TOP.CIRCUITS <- 10
NO.REPEATS <- 1000
hS.PERMUTATIONS <- 100000
library(igraph)
library(NetAct)
library(sRACIPE)
source('../../../networks/functions.R')
source('../../../networks/heatmapSimilarity.updated.R')
library(dplyr)
outdir <- './results/'
dir.create(outdir)
datadir <- '../../rankings.allCircuits/results/'
circuit_metrics.sim <- read.csv(file = paste0(datadir , "./summary.circuits.sim.sortedByAcc_flex.csv"), row.names = 1)
dim(circuit_metrics.sim)
getwd()
seq(1, 2)
remove(list = ls())
NO.TOP.CIRCUITS <- 10
datadir <- '../../rankings.allCircuits/results/'
circuit_metrics.sim <- read.csv(file = paste0(datadir , "./summary.circuits.sim.sortedByAcc_flex.csv"), row.names = 1)
circuit_metrics.sim <- circuit_metrics.sim[1:NO.TOP.CIRCUITS, ]
fname <-'../para.2/results/accuracy.all.csv'
accuracy.2.df <- read.csv(file = fname, row.names = 1)
dim(accuracy.2.df)
fname <-'../para.2/results/accuracy.all.csv'
accuracy.3.df <- read.csv(file = fname, row.names = 1)
dim(accuracy.3.df)
fname <-'./results/accuracy.all.csv'
accuracy.4.df <- read.csv(file = fname, row.names = 1)
dim(accuracy.4.df)
fname <-'../para.3/results/accuracy.all.csv'
accuracy.3.df <- read.csv(file = fname, row.names = 1)
dim(accuracy.3.df)
fname <-'../para.4/results/accuracy.all.csv'
accuracy.4.df <- read.csv(file = fname, row.names = 1)
dim(accuracy.4.df)
fname <-'./results/accuracy.all.csv'
accuracy.4.df <- read.csv(file = fname, row.names = 1)
dim(accuracy.4.df)
par(mfcol = c(4, 5))
par(oma=c(3,3,3,3)) # b, l, t, r - all sides have 3 lines of space - outer margin
par(mar=c(1,1,4,1) + 0.1) # b, l, t, r - inner margin
xlimit <- c(0.90, 0.96)
for(idx in rownames(accuracy.4.df)[1:5]){
print(idx)
# para 2
main.str <- paste(idx, ':', circuit_metrics.sim[idx, "Nodes"], sep = '')
hist(unlist(accuracy.2.df[idx,]), breaks = 50, main = main.str, xlim = xlimit)
abline(v = mean(unlist(accuracy.2.df[idx,])), col="red", lwd=2, lty=1)
abline(v = circuit_metrics.sim[idx, "Accuracy"], col="red", lwd=2, lty=2)
# para 3
main.str <- paste(idx, ':', circuit_metrics.sim[idx, "Nodes"], sep = '')
hist(unlist(accuracy.3.df[idx,]), breaks = 50, main = main.str, xlim = xlimit)
abline(v = mean(unlist(accuracy.3.df[idx,])), col="red", lwd=2, lty=1)
abline(v = circuit_metrics.sim[idx, "Accuracy"], col="red", lwd=2, lty=2)
# para 4
main.str <- paste(idx, ':', circuit_metrics.sim[idx, "Nodes"], sep = '')
hist(unlist(accuracy.4.df[idx,]), breaks = 50, main = main.str, xlim = xlimit)
abline(v = mean(unlist(accuracy.4.df[idx,])), col="red", lwd=2, lty=1)
abline(v = circuit_metrics.sim[idx, "Accuracy"], col="red", lwd=2, lty=2)
#break()
}
par(mfcol = c(3, 5))
par(oma=c(3,3,3,3)) # b, l, t, r - all sides have 3 lines of space - outer margin
par(mar=c(1,1,4,1) + 0.1) # b, l, t, r - inner margin
xlimit <- c(0.90, 0.96)
for(idx in rownames(accuracy.4.df)[1:5]){
print(idx)
# para 2
main.str <- paste(idx, ':', circuit_metrics.sim[idx, "Nodes"], sep = '')
hist(unlist(accuracy.2.df[idx,]), breaks = 50, main = main.str, xlim = xlimit)
abline(v = mean(unlist(accuracy.2.df[idx,])), col="red", lwd=2, lty=1)
abline(v = circuit_metrics.sim[idx, "Accuracy"], col="red", lwd=2, lty=2)
# para 3
main.str <- paste(idx, ':', circuit_metrics.sim[idx, "Nodes"], sep = '')
hist(unlist(accuracy.3.df[idx,]), breaks = 50, main = main.str, xlim = xlimit)
abline(v = mean(unlist(accuracy.3.df[idx,])), col="red", lwd=2, lty=1)
abline(v = circuit_metrics.sim[idx, "Accuracy"], col="red", lwd=2, lty=2)
# para 4
main.str <- paste(idx, ':', circuit_metrics.sim[idx, "Nodes"], sep = '')
hist(unlist(accuracy.4.df[idx,]), breaks = 50, main = main.str, xlim = xlimit)
abline(v = mean(unlist(accuracy.4.df[idx,])), col="red", lwd=2, lty=1)
abline(v = circuit_metrics.sim[idx, "Accuracy"], col="red", lwd=2, lty=2)
#break()
}
fname <-'../para.4/results/accuracy.all.csv'
accuracy.4.df <- read.csv(file = fname, row.names = 1)
dim(accuracy.4.df)
fname <-'./results/accuracy.all.csv'
accuracy.all.df <- read.csv(file = fname, row.names = 1)
dim(accuracy.all.df)
par(mfcol = c(4, 5))
par(oma=c(3,3,3,3)) # b, l, t, r - all sides have 3 lines of space - outer margin
par(mar=c(1,1,4,1) + 0.1) # b, l, t, r - inner margin
xlimit <- c(0.90, 0.96)
for(idx in rownames(accuracy.4.df)[1:5]){
print(idx)
# para 2
main.str <- paste(idx, ':', circuit_metrics.sim[idx, "Nodes"], sep = '')
hist(unlist(accuracy.2.df[idx,]), breaks = 50, main = main.str, xlim = xlimit)
abline(v = mean(unlist(accuracy.2.df[idx,])), col="red", lwd=2, lty=1)
abline(v = circuit_metrics.sim[idx, "Accuracy"], col="red", lwd=2, lty=2)
# para 3
main.str <- paste(idx, ':', circuit_metrics.sim[idx, "Nodes"], sep = '')
hist(unlist(accuracy.3.df[idx,]), breaks = 50, main = main.str, xlim = xlimit)
abline(v = mean(unlist(accuracy.3.df[idx,])), col="red", lwd=2, lty=1)
abline(v = circuit_metrics.sim[idx, "Accuracy"], col="red", lwd=2, lty=2)
# para 4
main.str <- paste(idx, ':', circuit_metrics.sim[idx, "Nodes"], sep = '')
hist(unlist(accuracy.4.df[idx,]), breaks = 50, main = main.str, xlim = xlimit)
abline(v = mean(unlist(accuracy.4.df[idx,])), col="red", lwd=2, lty=1)
abline(v = circuit_metrics.sim[idx, "Accuracy"], col="red", lwd=2, lty=2)
# para all
main.str <- paste(idx, ':', circuit_metrics.sim[idx, "Nodes"], sep = '')
hist(unlist(accuracy.all.df[idx,]), breaks = 50, main = main.str, xlim = xlimit)
abline(v = mean(unlist(accuracy.all.df[idx,])), col="red", lwd=2, lty=1)
abline(v = circuit_metrics.sim[idx, "Accuracy"], col="red", lwd=2, lty=2)
#break()
}
figdir <- './figs/'
dir.create(figdir)
WIDTH <- 12 #8 #6
HEIGHT <- 6 #12
figname <- paste(figdir, 'hist.accuracies-', WIDTH, 'x', HEIGHT,'-top1-5-3runs.pdf', sep = '')
pdf(file = figname, width = WIDTH, height = HEIGHT, paper = 'special')
#par(mfrow = c(5, 2))
par(mfcol = c(4, 5))
par(oma=c(3,3,3,3)) # b, l, t, r - all sides have 3 lines of space - outer margin
par(mar=c(1,1,4,1) + 0.1) # b, l, t, r - inner margin
#xlimit <- c((min(accuracy.4.df)-0.01), c(max(accuracy.4.df)+0.01))
xlimit <- c(0.90, 0.96)
for(idx in rownames(accuracy.4.df)[1:5]){
print(idx)
# para 2
main.str <- paste(idx, ':', circuit_metrics.sim[idx, "Nodes"], sep = '')
hist(unlist(accuracy.2.df[idx,]), breaks = 50, main = main.str, xlim = xlimit)
abline(v = mean(unlist(accuracy.2.df[idx,])), col="red", lwd=2, lty=1)
abline(v = circuit_metrics.sim[idx, "Accuracy"], col="red", lwd=2, lty=2)
# para 3
main.str <- paste(idx, ':', circuit_metrics.sim[idx, "Nodes"], sep = '')
hist(unlist(accuracy.3.df[idx,]), breaks = 50, main = main.str, xlim = xlimit)
abline(v = mean(unlist(accuracy.3.df[idx,])), col="red", lwd=2, lty=1)
abline(v = circuit_metrics.sim[idx, "Accuracy"], col="red", lwd=2, lty=2)
# para 4
main.str <- paste(idx, ':', circuit_metrics.sim[idx, "Nodes"], sep = '')
hist(unlist(accuracy.4.df[idx,]), breaks = 50, main = main.str, xlim = xlimit)
abline(v = mean(unlist(accuracy.4.df[idx,])), col="red", lwd=2, lty=1)
abline(v = circuit_metrics.sim[idx, "Accuracy"], col="red", lwd=2, lty=2)
# para all
main.str <- paste(idx, ':', circuit_metrics.sim[idx, "Nodes"], sep = '')
hist(unlist(accuracy.all.df[idx,]), breaks = 50, main = main.str, xlim = xlimit)
abline(v = mean(unlist(accuracy.all.df[idx,])), col="red", lwd=2, lty=1)
abline(v = circuit_metrics.sim[idx, "Accuracy"], col="red", lwd=2, lty=2)
#break()
}
dev.off()
figdir <- './figs/'
dir.create(figdir)
WIDTH <- 12 #8 #6
HEIGHT <- 6 #12
figname <- paste(figdir, 'hist.accuracies-', WIDTH, 'x', HEIGHT,'-top6-10-3runs.pdf', sep = '')
pdf(file = figname, width = WIDTH, height = HEIGHT, paper = 'special')
#par(mfrow = c(5, 2))
par(mfcol = c(4, 5))
par(oma=c(3,3,3,3)) # b, l, t, r - all sides have 3 lines of space - outer margin
par(mar=c(1,1,4,1) + 0.1) # b, l, t, r - inner margin
#xlimit <- c((min(accuracy.4.df)-0.01), c(max(accuracy.4.df)+0.01))
xlimit <- c(0.90, 0.96)
for(idx in rownames(accuracy.4.df)[6:10]){
print(idx)
# para 2
main.str <- paste(idx, ':', circuit_metrics.sim[idx, "Nodes"], sep = '')
hist(unlist(accuracy.2.df[idx,]), breaks = 50, main = main.str, xlim = xlimit)
abline(v = mean(unlist(accuracy.2.df[idx,])), col="red", lwd=2, lty=1)
abline(v = circuit_metrics.sim[idx, "Accuracy"], col="red", lwd=2, lty=2)
# para 3
main.str <- paste(idx, ':', circuit_metrics.sim[idx, "Nodes"], sep = '')
hist(unlist(accuracy.3.df[idx,]), breaks = 50, main = main.str, xlim = xlimit)
abline(v = mean(unlist(accuracy.3.df[idx,])), col="red", lwd=2, lty=1)
abline(v = circuit_metrics.sim[idx, "Accuracy"], col="red", lwd=2, lty=2)
# para 4
main.str <- paste(idx, ':', circuit_metrics.sim[idx, "Nodes"], sep = '')
hist(unlist(accuracy.4.df[idx,]), breaks = 50, main = main.str, xlim = xlimit)
abline(v = mean(unlist(accuracy.4.df[idx,])), col="red", lwd=2, lty=1)
abline(v = circuit_metrics.sim[idx, "Accuracy"], col="red", lwd=2, lty=2)
# para all
main.str <- paste(idx, ':', circuit_metrics.sim[idx, "Nodes"], sep = '')
hist(unlist(accuracy.all.df[idx,]), breaks = 50, main = main.str, xlim = xlimit)
abline(v = mean(unlist(accuracy.all.df[idx,])), col="red", lwd=2, lty=1)
abline(v = circuit_metrics.sim[idx, "Accuracy"], col="red", lwd=2, lty=2)
#break()
}
dev.off()
figdir <- './figs/'
dir.create(figdir)
WIDTH <- 12 #8 #6
HEIGHT <- 8 #12
figname <- paste(figdir, 'hist.accuracies-', WIDTH, 'x', HEIGHT,'-top1-5-3runs.pdf', sep = '')
pdf(file = figname, width = WIDTH, height = HEIGHT, paper = 'special')
#par(mfrow = c(5, 2))
par(mfcol = c(4, 5))
par(oma=c(3,3,3,3)) # b, l, t, r - all sides have 3 lines of space - outer margin
par(mar=c(1,1,4,1) + 0.1) # b, l, t, r - inner margin
#xlimit <- c((min(accuracy.4.df)-0.01), c(max(accuracy.4.df)+0.01))
xlimit <- c(0.90, 0.96)
for(idx in rownames(accuracy.4.df)[1:5]){
print(idx)
# para 2
main.str <- paste(idx, ':', circuit_metrics.sim[idx, "Nodes"], sep = '')
hist(unlist(accuracy.2.df[idx,]), breaks = 50, main = main.str, xlim = xlimit)
abline(v = mean(unlist(accuracy.2.df[idx,])), col="red", lwd=2, lty=1)
abline(v = circuit_metrics.sim[idx, "Accuracy"], col="red", lwd=2, lty=2)
# para 3
main.str <- paste(idx, ':', circuit_metrics.sim[idx, "Nodes"], sep = '')
hist(unlist(accuracy.3.df[idx,]), breaks = 50, main = main.str, xlim = xlimit)
abline(v = mean(unlist(accuracy.3.df[idx,])), col="red", lwd=2, lty=1)
abline(v = circuit_metrics.sim[idx, "Accuracy"], col="red", lwd=2, lty=2)
# para 4
main.str <- paste(idx, ':', circuit_metrics.sim[idx, "Nodes"], sep = '')
hist(unlist(accuracy.4.df[idx,]), breaks = 50, main = main.str, xlim = xlimit)
abline(v = mean(unlist(accuracy.4.df[idx,])), col="red", lwd=2, lty=1)
abline(v = circuit_metrics.sim[idx, "Accuracy"], col="red", lwd=2, lty=2)
# para all
main.str <- paste(idx, ':', circuit_metrics.sim[idx, "Nodes"], sep = '')
hist(unlist(accuracy.all.df[idx,]), breaks = 50, main = main.str, xlim = xlimit)
abline(v = mean(unlist(accuracy.all.df[idx,])), col="red", lwd=2, lty=1)
abline(v = circuit_metrics.sim[idx, "Accuracy"], col="red", lwd=2, lty=2)
#break()
}
dev.off()
figdir <- './figs/'
dir.create(figdir)
WIDTH <- 12 #8 #6
HEIGHT <- 8 #12
figname <- paste(figdir, 'hist.accuracies-', WIDTH, 'x', HEIGHT,'-top6-10-3runs.pdf', sep = '')
pdf(file = figname, width = WIDTH, height = HEIGHT, paper = 'special')
#par(mfrow = c(5, 2))
par(mfcol = c(4, 5))
par(oma=c(3,3,3,3)) # b, l, t, r - all sides have 3 lines of space - outer margin
par(mar=c(1,1,4,1) + 0.1) # b, l, t, r - inner margin
#xlimit <- c((min(accuracy.4.df)-0.01), c(max(accuracy.4.df)+0.01))
xlimit <- c(0.90, 0.96)
for(idx in rownames(accuracy.4.df)[6:10]){
print(idx)
# para 2
main.str <- paste(idx, ':', circuit_metrics.sim[idx, "Nodes"], sep = '')
hist(unlist(accuracy.2.df[idx,]), breaks = 50, main = main.str, xlim = xlimit)
abline(v = mean(unlist(accuracy.2.df[idx,])), col="red", lwd=2, lty=1)
abline(v = circuit_metrics.sim[idx, "Accuracy"], col="red", lwd=2, lty=2)
# para 3
main.str <- paste(idx, ':', circuit_metrics.sim[idx, "Nodes"], sep = '')
hist(unlist(accuracy.3.df[idx,]), breaks = 50, main = main.str, xlim = xlimit)
abline(v = mean(unlist(accuracy.3.df[idx,])), col="red", lwd=2, lty=1)
abline(v = circuit_metrics.sim[idx, "Accuracy"], col="red", lwd=2, lty=2)
# para 4
main.str <- paste(idx, ':', circuit_metrics.sim[idx, "Nodes"], sep = '')
hist(unlist(accuracy.4.df[idx,]), breaks = 50, main = main.str, xlim = xlimit)
abline(v = mean(unlist(accuracy.4.df[idx,])), col="red", lwd=2, lty=1)
abline(v = circuit_metrics.sim[idx, "Accuracy"], col="red", lwd=2, lty=2)
# para all
main.str <- paste(idx, ':', circuit_metrics.sim[idx, "Nodes"], sep = '')
hist(unlist(accuracy.all.df[idx,]), breaks = 50, main = main.str, xlim = xlimit)
abline(v = mean(unlist(accuracy.all.df[idx,])), col="red", lwd=2, lty=1)
abline(v = circuit_metrics.sim[idx, "Accuracy"], col="red", lwd=2, lty=2)
#break()
}
dev.off()
fname <-'./results/accuracy.all.csv'
accuracy.all.df <- read.csv(file = fname, row.names = 1)
dim(accuracy.all.df)
View(accuracy.all.df)
remove(list = ls())
fname <-'./results/accuracy.all.csv'
accuracy.all.df <- read.csv(file = fname, row.names = 1)
dim(accuracy.all.df)
mean.sd.df <- NULL
mean.sd.df$mean <- apply(accuracy.all.df, 1, mean)
mean.sd.df$sd <- apply(accuracy.all.df, 1, sd)
mean.sd.df
class(mean.sd.df)
mean.sd.df
names(mean.sd.df)
length(mean.sd.df)
length(mean.sd.df$mean)
mean.sd <- cbind(apply(accuracy.all.df, 1, mean), apply(accuracy.all.df, 1, sd))
View(mean.sd)
colnames(mean.sd) <- c('mean', 'sd')
plot(mean.sd[,'mean'] )
dev.off()
plot(mean.sd[,'mean'] )
plot(mean.sd[,'sd'] )
plot(mean.sd[,'mean'] )
plot(mean.sd[,'sd'] )
par(mfcol = c(2, 1))
plot(mean.sd[,'mean'] )
plot(mean.sd[,'sd'] )
par(mar=c(1,1,4,1) + 0.1) # b, l, t, r - inner margin
par(oma=c(3,3,3,3)) # b, l, t, r - all sides have 3 lines of space - outer margin
par(mar=c(1,1,4,1) + 0.1) # b, l, t, r - inner margin
par(mfcol = c(2, 1))
par(oma=c(3,3,3,3)) # b, l, t, r - all sides have 3 lines of space - outer margin
par(mar=c(1,1,4,1) + 0.1) # b, l, t, r - inner margin
plot(mean.sd[,'mean'] )
plot(mean.sd[,'sd'] )
par(mfcol = c(2, 1))
par(oma=c(3,3,3,3)) # b, l, t, r - all sides have 3 lines of space - outer margin
par(mar=c(1,1,1,1) + 0.1) # b, l, t, r - inner margin
plot(mean.sd[,'mean'] )
plot(mean.sd[,'sd'] )
figdir <- './figs/'
dir.create(figdir)
WIDTH <- 8
HEIGHT <- 8
figname <- paste(figdir, 'accuracies-mean.sd', WIDTH, 'x', HEIGHT,'.pdf', sep = '')
pdf(file = figname, width = WIDTH, height = HEIGHT, paper = 'special')
par(mfcol = c(2, 1))
par(oma=c(3,3,3,3)) # b, l, t, r - all sides have 3 lines of space - outer margin
par(mar=c(1,1,1,1) + 0.1) # b, l, t, r - inner margin
plot(mean.sd[,'mean'], main = 'mean' )
plot(mean.sd[,'sd'], sd='sd')
dev.off()
par(mfcol = c(2, 1))
par(oma=c(3,3,3,3)) # b, l, t, r - all sides have 3 lines of space - outer margin
par(mar=c(1,1,1,1) + 0.1) # b, l, t, r - inner margin
plot(mean.sd[,'mean'], main = 'mean' )
plot(mean.sd[,'sd'], sd='sd')
par(mfcol = c(2, 1))
par(oma=c(3,3,3,3)) # b, l, t, r - all sides have 3 lines of space - outer margin
par(mfcol = c(2, 1))
par(oma=c(3,3,3,3)) # b, l, t, r - all sides have 3 lines of space - outer margin
par(mar=c(1,1,1,1) + 0.1) # b, l, t, r - inner margin
plot(mean.sd[,'mean'], main = 'mean' )
plot(mean.sd[,'sd'], main='sd')
plot(mean.sd[,'mean'], xlab = 'mean (accuracy)' )
plot(mean.sd[,'sd'], main='sd (accuracy)')
par(mfcol = c(2, 1))
par(oma=c(3,3,3,3)) # b, l, t, r - all sides have 3 lines of space - outer margin
par(mar=c(1,1,1,1) + 0.1) # b, l, t, r - inner margin
plot(mean.sd[,'mean'], ylab = 'mean (accuracy)' )
plot(mean.sd[,'sd'], ylab='sd (accuracy)')
par(mfcol = c(2, 1))
par(oma=c(3,3,3,3)) # b, l, t, r - all sides have 3 lines of space - outer margin
par(mar=c(1,4,1,1) + 0.1) # b, l, t, r - inner margin
plot(mean.sd[,'mean'], ylab = 'mean (accuracy)' )
plot(mean.sd[,'sd'], ylab='sd (accuracy)')
par(mfcol = c(2, 1))
par(oma=c(3,1,3,3)) # b, l, t, r - all sides have 3 lines of space - outer margin
par(mar=c(1,4,1,1) + 0.1) # b, l, t, r - inner margin
plot(mean.sd[,'mean'], ylab = 'mean (accuracy)' )
plot(mean.sd[,'sd'], ylab='sd (accuracy)')
figdir <- './figs/'
dir.create(figdir)
WIDTH <- 8
HEIGHT <- 8
figname <- paste(figdir, 'accuracies-mean.sd', WIDTH, 'x', HEIGHT,'.pdf', sep = '')
pdf(file = figname, width = WIDTH, height = HEIGHT, paper = 'special')
par(mfcol = c(2, 1))
par(oma=c(3,1,3,3)) # b, l, t, r - all sides have 3 lines of space - outer margin
par(mar=c(1,4,1,1) + 0.1) # b, l, t, r - inner margin
plot(mean.sd[,'mean'], ylab = 'mean (accuracy)' )
plot(mean.sd[,'sd'], ylab='sd (accuracy)')
dev.off()
figdir <- './figs/'
dir.create(figdir)
WIDTH <- 8
HEIGHT <- 8
figname <- paste(figdir, 'accuracies-mean.sd-', WIDTH, 'x', HEIGHT,'.pdf', sep = '')
pdf(file = figname, width = WIDTH, height = HEIGHT, paper = 'special')
par(mfcol = c(2, 1))
par(oma=c(3,1,3,3)) # b, l, t, r - all sides have 3 lines of space - outer margin
par(mar=c(1,4,1,1) + 0.1) # b, l, t, r - inner margin
plot(mean.sd[,'mean'], ylab = 'mean (accuracy)' )
plot(mean.sd[,'sd'], ylab='sd (accuracy)')
dev.off()
remove(list = ls())
NO.TOP.CIRCUITS <- 10
rm(mean.sd.df)
remove(list = ls())
fname <-'./results/accuracy.all.csv'
accuracy.all.df <- read.csv(file = fname, row.names = 1)
dim(accuracy.all.df)
mean.sd.df <- NULL
mean.sd.df$mean <- apply(accuracy.all.df, 1, mean)
mean.sd.df$sd <- apply(accuracy.all.df, 1, sd)
remove(list = ls())
fname <-'./results/accuracy.all.csv'
accuracy.all.df <- read.csv(file = fname, row.names = 1)
dim(accuracy.all.df)
mean.sd.df$mean <- apply(accuracy.all.df, 1, mean)
mean.sd.df <- NULL
mean.sd.df$mean <- apply(accuracy.all.df, 1, mean)
mean.sd.df$sd <- apply(accuracy.all.df, 1, sd)
mean
mean.sd <- cbind(apply(accuracy.all.df, 1, mean), apply(accuracy.all.df, 1, sd))
colnames(mean.sd) <- c('mean', 'sd')
write.csv(mean.sd, file = "./results/accuracy.all.csv", row.names = T, quote = F)
write.csv(mean.sd, file = "./results/accuracy.mean_sd.csv", row.names = T, quote = F)
write.csv(format(mean.sd, digits = 3), file = "./results/accuracy.mean_sd.csv", row.names = T, quote = F)
getwd()
