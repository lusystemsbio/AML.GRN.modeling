remove(list = ls())
circuit_metrics.sim.new <- read.csv(file = '../../networks/results/summary.circuits.sim.sortedByAcc_flex.csv', row.names = 1)
circuit_metrics.sim.old <- read.csv(file = '../../networks/results.old/summary.circuits.sim.sortedByAcc_flex.csv', row.names = 1)
circuit_metrics.sim.old.2 <- circuit_metrics.sim.old[rownames(circuit_metrics.sim.new), ]
sum(rownames(circuit_metrics.sim.old.2) == rownames(circuit_metrics.sim.new))
sum(circuit_metrics.sim.new$flexibility==circuit_metrics.sim.old.2$flexibility)
View(circuit_metrics.sim.new)
print(idx)
for(idx in rownames(circuit_metrics.sim.new)[1:10]){
print(idx)
}
racipe <- readRDS(file = paste('../networks/circuits.sim/circuit_simulated_', idx, '.rds', sep = '') )
for(idx in rownames(circuit_metrics.sim.new)[1:10]){
print(idx)
racipe <- readRDS(file = paste('../networks/circuits.sim/circuit_simulated_', idx, '.rds', sep = '') )
}
dim(racipe)
View(circuit_metrics.sim.new)
View(circuit_metrics.sim.old)
circuit_metrics.sim.old <- read.csv(file = '../../networks/results.old/summary.circuits.sim.sortedByAcc_flex.csv', row.names = 1)
circuit_metrics.sim.old <- circuit_metrics.sim.old[circuit_metrics.sim.old$Nodes>=15]
circuit_metrics.sim.old <- circuit_metrics.sim.old[circuit_metrics.sim.old$Nodes>=15, ]
dim(circuit_metrics.sim.old)
View(circuit_metrics.sim.new)
View(circuit_metrics.sim.old)
NO.TOP.CIRCUITS <- 10
circuit_metrics.sim <- read.csv(file = '../../networks/results/summary.circuits.sim.sortedByAcc_flex.csv', row.names = 1)
View(circuit_metrics.sim)
NO.SAMPLES <- 30
flex.df <- as.data.frame(matrix(nrow = NO.TOP.CIRCUITS, (NO.SAMPLES)))
for(idx in rownames(circuit_metrics.sim.new)[1:10]){
print(idx)
racipe.all <- readRDS(file = paste('../networks/circuits.sim/circuit_simulated_', idx, '.rds', sep = '') )
racipe <- racipe[, sample(ncol(racipe.all), SAMPLE_SIZE)]
racipe <- sRACIPE::sracipeNormalize(racipe)
# KD by subsetting:
racipe.kd <- sRACIPE::sracipeKnockDown(racipe, plotToFile = FALSE,
plotBarPlot = FALSE, #TRUE,
plotHeatmap = FALSE,
reduceProduction = (100-PERCENT_REDUCTION)
)
avg.dist <- calDistance(racipe.kd)
flex.df
flexibility.df[circuit_idx, ] <- c(circuit_idx, avg.dist)
break()
}
remove(list = ls())
NO_SAMPLES <- 1000
SAMPLE_SIZE <- 10000
NO.TOP.CIRCUITS <- 10
PERCENT_REDUCTION <- 90
circuit_metrics.sim <- read.csv(file = '../../networks/results/summary.circuits.sim.sortedByAcc_flex.csv', row.names = 1)
flex.df <- as.data.frame(matrix(nrow = NO.TOP.CIRCUITS, (NO.SAMPLES)))
flex.df <- as.data.frame(matrix(nrow = NO.TOP.CIRCUITS, (NO_SAMPLES)))
dim(NO.TOP.CIRCUITS)
dim(flex.df)
SAMPLE_SIZE <- 10000
NO.TOP.CIRCUITS <- 10
PERCENT_REDUCTION <- 90
circuit_metrics.sim <- read.csv(file = '../../networks/results/summary.circuits.sim.sortedByAcc_flex.csv', row.names = 1)
flex.df <- as.data.frame(matrix(nrow = NO.TOP.CIRCUITS, (NO_SAMPLES)))
dim(flex.df)
View(flex.df)
flex.df <- as.data.frame(matrix(nrow = NO.TOP.CIRCUITS, nol=NO_SAMPLES)))
flex.df <- as.data.frame(matrix(nrow = NO.TOP.CIRCUITS, nol=NO_SAMPLES))
flex.df <- as.data.frame(matrix(nrow = NO.TOP.CIRCUITS, nol=NO_SAMPLES))
NO_SAMPLES <- 1000
SAMPLE_SIZE <- 10000
NO.TOP.CIRCUITS <- 10
PERCENT_REDUCTION <- 90
circuit_metrics.sim <- read.csv(file = '../../networks/results/summary.circuits.sim.sortedByAcc_flex.csv', row.names = 1)
flex.df <- as.data.frame(matrix(nrow = NO.TOP.CIRCUITS, nol=NO_SAMPLES))
flex.df <- as.data.frame(matrix(nrow = NO.TOP.CIRCUITS, ncol=NO_SAMPLES))
dim(flex.df)
circuit_metrics.sim <- circuit_metrics.sim[1:NO.TOP.CIRCUITS, ]
flex.df <- as.data.frame(matrix(nrow = NO.TOP.CIRCUITS, ncol=NO_SAMPLES))
dim(flex.df)
for(idx in rownames(circuit_metrics.sim.new)[1:10]){
print(idx)
racipe.all <- readRDS(file = paste('../networks/circuits.sim/circuit_simulated_', idx, '.rds', sep = '') )
racipe <- racipe[, sample(ncol(racipe.all), SAMPLE_SIZE)]
racipe <- sRACIPE::sracipeNormalize(racipe)
# KD by subsetting:
racipe.kd <- sRACIPE::sracipeKnockDown(racipe, plotToFile = FALSE,
plotBarPlot = FALSE, #TRUE,
plotHeatmap = FALSE,
reduceProduction = (100-PERCENT_REDUCTION)
)
avg.dist <- calDistance(racipe.kd)
flex.df
flexibility.df[circuit_idx, ] <- c(circuit_idx, avg.dist)
break()
}
for(idx in rownames(circuit_metrics.sim)){
print(idx)
racipe.all <- readRDS(file = paste('../networks/circuits.sim/circuit_simulated_', idx, '.rds', sep = '') )
racipe <- racipe[, sample(ncol(racipe.all), SAMPLE_SIZE)]
racipe <- sRACIPE::sracipeNormalize(racipe)
# KD by subsetting:
racipe.kd <- sRACIPE::sracipeKnockDown(racipe, plotToFile = FALSE,
plotBarPlot = FALSE, #TRUE,
plotHeatmap = FALSE,
reduceProduction = (100-PERCENT_REDUCTION)
)
avg.dist <- calDistance(racipe.kd)
flex.df
flexibility.df[circuit_idx, ] <- c(circuit_idx, avg.dist)
break()
}
?sapply
seq(NO_SAMPLES <)
seq(NO_SAMPLES)
head(seq(NO_SAMPLES))
tail(seq(NO_SAMPLES))
flex.df <- sapply(seq(NO_SAMPLES), function(){
racipe <- racipe[, sample(ncol(racipe.all), SAMPLE_SIZE)]
racipe <- sRACIPE::sracipeNormalize(racipe)
# KD by subsetting:
racipe.kd <- sRACIPE::sracipeKnockDown(racipe, plotToFile = FALSE,
plotBarPlot = FALSE, #TRUE,
plotHeatmap = FALSE,
reduceProduction = (100-PERCENT_REDUCTION)
)
avg.dist <- calDistance(racipe.kd)
return(avg.dist)
})
flex.df <- sapply(seq(NO_SAMPLES), function(x){
racipe <- racipe[, sample(ncol(racipe.all), SAMPLE_SIZE)]
racipe <- sRACIPE::sracipeNormalize(racipe)
# KD by subsetting:
racipe.kd <- sRACIPE::sracipeKnockDown(racipe, plotToFile = FALSE,
plotBarPlot = FALSE, #TRUE,
plotHeatmap = FALSE,
reduceProduction = (100-PERCENT_REDUCTION)
)
avg.dist <- calDistance(racipe.kd)
return(avg.dist)
})
racipe.all <- readRDS(file = paste('../networks/circuits.sim/circuit_simulated_', idx, '.rds', sep = '') )
flex.df <- sapply(seq(NO_SAMPLES), function(x){
racipe <- racipe[, sample(ncol(racipe.all), SAMPLE_SIZE)]
racipe <- sRACIPE::sracipeNormalize(racipe)
# KD by subsetting:
racipe.kd <- sRACIPE::sracipeKnockDown(racipe, plotToFile = FALSE,
plotBarPlot = FALSE, #TRUE,
plotHeatmap = FALSE,
reduceProduction = (100-PERCENT_REDUCTION)
)
avg.dist <- calDistance(racipe.kd)
return(avg.dist)
})
flex.df <- sapply(seq(NO_SAMPLES), function(x){
racipe <- racipe.all[, sample(ncol(racipe.all), SAMPLE_SIZE)]
racipe <- sRACIPE::sracipeNormalize(racipe)
# KD by subsetting:
racipe.kd <- sRACIPE::sracipeKnockDown(racipe, plotToFile = FALSE,
plotBarPlot = FALSE, #TRUE,
plotHeatmap = FALSE,
reduceProduction = (100-PERCENT_REDUCTION)
)
avg.dist <- calDistance(racipe.kd)
return(avg.dist)
})
source('../../networks/functions.R')
flex.df <- sapply(seq(1:2), function(x){
racipe <- racipe.all[, sample(ncol(racipe.all), SAMPLE_SIZE)]
racipe <- sRACIPE::sracipeNormalize(racipe)
# KD by subsetting:
racipe.kd <- sRACIPE::sracipeKnockDown(racipe, plotToFile = FALSE,
plotBarPlot = FALSE, #TRUE,
plotHeatmap = FALSE,
reduceProduction = (100-PERCENT_REDUCTION)
)
avg.dist <- calDistance(racipe.kd)
return(avg.dist)
})
flex.df
flex.v <- sapply(seq(1:2), function(){
racipe <- racipe.all[, sample(ncol(racipe.all), SAMPLE_SIZE)]
racipe <- sRACIPE::sracipeNormalize(racipe)
# KD by subsetting:
racipe.kd <- sRACIPE::sracipeKnockDown(racipe, plotToFile = FALSE,
plotBarPlot = FALSE, #TRUE,
plotHeatmap = FALSE,
reduceProduction = (100-PERCENT_REDUCTION)
)
avg.dist <- calDistance(racipe.kd)
return(avg.dist)
})
flex.v <- sapply(seq(1:2), function(x){
racipe <- racipe.all[, sample(ncol(racipe.all), SAMPLE_SIZE)]
racipe <- sRACIPE::sracipeNormalize(racipe)
# KD by subsetting:
racipe.kd <- sRACIPE::sracipeKnockDown(racipe, plotToFile = FALSE,
plotBarPlot = FALSE, #TRUE,
plotHeatmap = FALSE,
reduceProduction = (100-PERCENT_REDUCTION)
)
avg.dist <- calDistance(racipe.kd)
return(avg.dist)
})
flex.v
circuit_idx
flexibility.df <- as.data.frame(matrix(nrow = NO.TOP.CIRCUITS, ncol=NO_SAMPLES))
dim(flexibility.df)
rownames(flexibility.df) <- rownames(circuit_metrics.sim)
View(flexibility.df)
NO_SAMPLES <- 2 #1000
SAMPLE_SIZE <- 10000
NO.TOP.CIRCUITS <- 10
PERCENT_REDUCTION <- 90
source('../../networks/functions.R')
circuit_metrics.sim <- read.csv(file = '../../networks/results/summary.circuits.sim.sortedByAcc_flex.csv', row.names = 1)
circuit_metrics.sim <- circuit_metrics.sim[1:NO.TOP.CIRCUITS, ]
flexibility.df <- as.data.frame(matrix(nrow = NO.TOP.CIRCUITS, ncol=NO_SAMPLES))
dim(flexibility.df)
rownames(flexibility.df) <- rownames(circuit_metrics.sim)
for(circuit_idx in rownames(circuit_metrics.sim)){
print(circuit_idx)
racipe.all <- readRDS(file = paste('../networks/circuits.sim/circuit_simulated_', circuit_idx, '.rds', sep = '') )
flex.v <- sapply(seq(1:NO_SAMPLES), function(x){
racipe <- racipe.all[, sample(ncol(racipe.all), SAMPLE_SIZE)]
racipe <- sRACIPE::sracipeNormalize(racipe)
# KD by subsetting:
racipe.kd <- sRACIPE::sracipeKnockDown(racipe, plotToFile = FALSE,
plotBarPlot = FALSE, #TRUE,
plotHeatmap = FALSE,
reduceProduction = (100-PERCENT_REDUCTION)
)
avg.dist <- calDistance(racipe.kd)
return(avg.dist)
})
flexibility.df[circuit_idx, ] <- flex.v
break()
}
outdir <- './results/'
dir.create(outdir)
library(sRACIPE)
